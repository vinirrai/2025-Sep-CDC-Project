{
  "version": 3,
  "sources": ["../../satellite.js/dist/satellite.es.js"],
  "sourcesContent": ["/*!\r\n * satellite-js v5.0.0\r\n * (c) 2013 Shashwat Kandadai and UCSC\r\n * https://github.com/shashwatak/satellite-js\r\n * License: MIT\r\n */\r\n\r\nvar pi = Math.PI;\r\nvar twoPi = pi * 2;\r\nvar deg2rad = pi / 180.0;\r\nvar rad2deg = 180 / pi;\r\nvar minutesPerDay = 1440.0;\r\nvar mu = 398600.8; // in km3 / s2\r\nvar earthRadius = 6378.135; // in km\r\nvar xke = 60.0 / Math.sqrt(earthRadius * earthRadius * earthRadius / mu);\r\nvar vkmpersec = earthRadius * xke / 60.0;\r\nvar tumin = 1.0 / xke;\r\nvar j2 = 0.001082616;\r\nvar j3 = -0.00000253881;\r\nvar j4 = -0.00000165597;\r\nvar j3oj2 = j3 / j2;\r\nvar x2o3 = 2.0 / 3.0;\r\n\r\nvar constants = /*#__PURE__*/Object.freeze({\r\n  __proto__: null,\r\n  deg2rad: deg2rad,\r\n  earthRadius: earthRadius,\r\n  j2: j2,\r\n  j3: j3,\r\n  j3oj2: j3oj2,\r\n  j4: j4,\r\n  minutesPerDay: minutesPerDay,\r\n  mu: mu,\r\n  pi: pi,\r\n  rad2deg: rad2deg,\r\n  tumin: tumin,\r\n  twoPi: twoPi,\r\n  vkmpersec: vkmpersec,\r\n  x2o3: x2o3,\r\n  xke: xke\r\n});\r\n\r\n/* -----------------------------------------------------------------------------\r\n *\r\n *                           procedure days2mdhms\r\n *\r\n *  this procedure converts the day of the year, days, to the equivalent month\r\n *    day, hour, minute and second.\r\n *\r\n *  algorithm     : set up array for the number of days per month\r\n *                  find leap year - use 1900 because 2000 is a leap year\r\n *                  loop through a temp value while the value is < the days\r\n *                  perform int conversions to the correct day and month\r\n *                  convert remainder into h m s using type conversions\r\n *\r\n *  author        : david vallado                  719-573-2600    1 mar 2001\r\n *\r\n *  inputs          description                    range / units\r\n *    year        - year                           1900 .. 2100\r\n *    days        - julian day of the year         0.0  .. 366.0\r\n *\r\n *  outputs       :\r\n *    mon         - month                          1 .. 12\r\n *    day         - day                            1 .. 28,29,30,31\r\n *    hr          - hour                           0 .. 23\r\n *    min         - minute                         0 .. 59\r\n *    sec         - second                         0.0 .. 59.999\r\n *\r\n *  locals        :\r\n *    dayofyr     - day of year\r\n *    temp        - temporary extended values\r\n *    inttemp     - temporary int value\r\n *    i           - index\r\n *    lmonth[12]  - int array containing the number of days per month\r\n *\r\n *  coupling      :\r\n *    none.\r\n * --------------------------------------------------------------------------- */\r\nfunction days2mdhms(year, days) {\r\n  var lmonth = [31, year % 4 === 0 ? 29 : 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n  var dayofyr = Math.floor(days);\r\n\r\n  //  ----------------- find month and day of month ----------------\r\n  var i = 1;\r\n  var inttemp = 0;\r\n  while (dayofyr > inttemp + lmonth[i - 1] && i < 12) {\r\n    inttemp += lmonth[i - 1];\r\n    i += 1;\r\n  }\r\n  var mon = i;\r\n  var day = dayofyr - inttemp;\r\n\r\n  //  ----------------- find hours minutes and seconds -------------\r\n  var temp = (days - dayofyr) * 24.0;\r\n  var hr = Math.floor(temp);\r\n  temp = (temp - hr) * 60.0;\r\n  var minute = Math.floor(temp);\r\n  var sec = (temp - minute) * 60.0;\r\n  return {\r\n    mon: mon,\r\n    day: day,\r\n    hr: hr,\r\n    minute: minute,\r\n    sec: sec\r\n  };\r\n}\r\n\r\n/* -----------------------------------------------------------------------------\r\n *\r\n *                           procedure jday\r\n *\r\n *  this procedure finds the julian date given the year, month, day, and time.\r\n *    the julian date is defined by each elapsed day since noon, jan 1, 4713 bc.\r\n *\r\n *  algorithm     : calculate the answer in one step for efficiency\r\n *\r\n *  author        : david vallado                  719-573-2600    1 mar 2001\r\n *\r\n *  inputs          description                    range / units\r\n *    year        - year                           1900 .. 2100\r\n *    mon         - month                          1 .. 12\r\n *    day         - day                            1 .. 28,29,30,31\r\n *    hr          - universal time hour            0 .. 23\r\n *    min         - universal time min             0 .. 59\r\n *    sec         - universal time sec             0.0 .. 59.999\r\n *\r\n *  outputs       :\r\n *    jd          - julian date                    days from 4713 bc\r\n *\r\n *  locals        :\r\n *    none.\r\n *\r\n *  coupling      :\r\n *    none.\r\n *\r\n *  references    :\r\n *    vallado       2007, 189, alg 14, ex 3-14\r\n *\r\n * --------------------------------------------------------------------------- */\r\nfunction jdayInternal(year, mon, day, hr, minute, sec) {\r\n  var msec = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 0;\r\n  return 367.0 * year - Math.floor(7 * (year + Math.floor((mon + 9) / 12.0)) * 0.25) + Math.floor(275 * mon / 9.0) + day + 1721013.5 + ((msec / 60000 + sec / 60.0 + minute) / 60.0 + hr) / 24.0 // ut in days\r\n  // # - 0.5*sgn(100.0*year + mon - 190002.5) + 0.5;\r\n  ;\r\n}\r\n\r\nfunction jday(year, mon, day, hr, minute, sec, msec) {\r\n  if (year instanceof Date) {\r\n    var date = year;\r\n    return jdayInternal(date.getUTCFullYear(), date.getUTCMonth() + 1,\r\n    // Note, this function requires months in range 1-12.\r\n    date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());\r\n  }\r\n  return jdayInternal(year, mon, day, hr, minute, sec, msec);\r\n}\r\n\r\n/* -----------------------------------------------------------------------------\r\n *\r\n *                           procedure invjday\r\n *\r\n *  this procedure finds the year, month, day, hour, minute and second\r\n *  given the julian date. tu can be ut1, tdt, tdb, etc.\r\n *\r\n *  algorithm     : set up starting values\r\n *                  find leap year - use 1900 because 2000 is a leap year\r\n *                  find the elapsed days through the year in a loop\r\n *                  call routine to find each individual value\r\n *\r\n *  author        : david vallado                  719-573-2600    1 mar 2001\r\n *\r\n *  inputs          description                    range / units\r\n *    jd          - julian date                    days from 4713 bc\r\n *\r\n *  outputs       :\r\n *    year        - year                           1900 .. 2100\r\n *    mon         - month                          1 .. 12\r\n *    day         - day                            1 .. 28,29,30,31\r\n *    hr          - hour                           0 .. 23\r\n *    min         - minute                         0 .. 59\r\n *    sec         - second                         0.0 .. 59.999\r\n *\r\n *  locals        :\r\n *    days        - day of year plus fractional\r\n *                  portion of a day               days\r\n *    tu          - julian centuries from 0 h\r\n *                  jan 0, 1900\r\n *    temp        - temporary double values\r\n *    leapyrs     - number of leap years from 1900\r\n *\r\n *  coupling      :\r\n *    days2mdhms  - finds month, day, hour, minute and second given days and year\r\n *\r\n *  references    :\r\n *    vallado       2007, 208, alg 22, ex 3-13\r\n * --------------------------------------------------------------------------- */\r\nfunction invjday(jd, asArray) {\r\n  // --------------- find year and days of the year -\r\n  var temp = jd - 2415019.5;\r\n  var tu = temp / 365.25;\r\n  var year = 1900 + Math.floor(tu);\r\n  var leapyrs = Math.floor((year - 1901) * 0.25);\r\n\r\n  // optional nudge by 8.64x10-7 sec to get even outputs\r\n  var days = temp - ((year - 1900) * 365.0 + leapyrs) + 0.00000000001;\r\n\r\n  // ------------ check for case of beginning of a year -----------\r\n  if (days < 1.0) {\r\n    year -= 1;\r\n    leapyrs = Math.floor((year - 1901) * 0.25);\r\n    days = temp - ((year - 1900) * 365.0 + leapyrs);\r\n  }\r\n\r\n  // ----------------- find remaing data  -------------------------\r\n  var mdhms = days2mdhms(year, days);\r\n  var mon = mdhms.mon,\r\n    day = mdhms.day,\r\n    hr = mdhms.hr,\r\n    minute = mdhms.minute;\r\n  var sec = mdhms.sec - 0.00000086400;\r\n  if (asArray) {\r\n    return [year, mon, day, hr, minute, Math.floor(sec)];\r\n  }\r\n  return new Date(Date.UTC(year, mon - 1, day, hr, minute, Math.floor(sec)));\r\n}\r\n\r\n/* -----------------------------------------------------------------------------\r\n *\r\n *                           procedure dpper\r\n *\r\n *  this procedure provides deep space long period periodic contributions\r\n *    to the mean elements.  by design, these periodics are zero at epoch.\r\n *    this used to be dscom which included initialization, but it's really a\r\n *    recurring function.\r\n *\r\n *  author        : david vallado                  719-573-2600   28 jun 2005\r\n *\r\n *  inputs        :\r\n *    e3          -\r\n *    ee2         -\r\n *    peo         -\r\n *    pgho        -\r\n *    pho         -\r\n *    pinco       -\r\n *    plo         -\r\n *    se2 , se3 , sgh2, sgh3, sgh4, sh2, sh3, si2, si3, sl2, sl3, sl4 -\r\n *    t           -\r\n *    xh2, xh3, xi2, xi3, xl2, xl3, xl4 -\r\n *    zmol        -\r\n *    zmos        -\r\n *    ep          - eccentricity                           0.0 - 1.0\r\n *    inclo       - inclination - needed for lyddane modification\r\n *    nodep       - right ascension of ascending node\r\n *    argpp       - argument of perigee\r\n *    mp          - mean anomaly\r\n *\r\n *  outputs       :\r\n *    ep          - eccentricity                           0.0 - 1.0\r\n *    inclp       - inclination\r\n *    nodep        - right ascension of ascending node\r\n *    argpp       - argument of perigee\r\n *    mp          - mean anomaly\r\n *\r\n *  locals        :\r\n *    alfdp       -\r\n *    betdp       -\r\n *    cosip  , sinip  , cosop  , sinop  ,\r\n *    dalf        -\r\n *    dbet        -\r\n *    dls         -\r\n *    f2, f3      -\r\n *    pe          -\r\n *    pgh         -\r\n *    ph          -\r\n *    pinc        -\r\n *    pl          -\r\n *    sel   , ses   , sghl  , sghs  , shl   , shs   , sil   , sinzf , sis   ,\r\n *    sll   , sls\r\n *    xls         -\r\n *    xnoh        -\r\n *    zf          -\r\n *    zm          -\r\n *\r\n *  coupling      :\r\n *    none.\r\n *\r\n *  references    :\r\n *    hoots, roehrich, norad spacetrack report #3 1980\r\n *    hoots, norad spacetrack report #6 1986\r\n *    hoots, schumacher and glover 2004\r\n *    vallado, crawford, hujsak, kelso  2006\r\n ----------------------------------------------------------------------------*/\r\nfunction dpper(satrec, options) {\r\n  var e3 = satrec.e3,\r\n    ee2 = satrec.ee2,\r\n    peo = satrec.peo,\r\n    pgho = satrec.pgho,\r\n    pho = satrec.pho,\r\n    pinco = satrec.pinco,\r\n    plo = satrec.plo,\r\n    se2 = satrec.se2,\r\n    se3 = satrec.se3,\r\n    sgh2 = satrec.sgh2,\r\n    sgh3 = satrec.sgh3,\r\n    sgh4 = satrec.sgh4,\r\n    sh2 = satrec.sh2,\r\n    sh3 = satrec.sh3,\r\n    si2 = satrec.si2,\r\n    si3 = satrec.si3,\r\n    sl2 = satrec.sl2,\r\n    sl3 = satrec.sl3,\r\n    sl4 = satrec.sl4,\r\n    t = satrec.t,\r\n    xgh2 = satrec.xgh2,\r\n    xgh3 = satrec.xgh3,\r\n    xgh4 = satrec.xgh4,\r\n    xh2 = satrec.xh2,\r\n    xh3 = satrec.xh3,\r\n    xi2 = satrec.xi2,\r\n    xi3 = satrec.xi3,\r\n    xl2 = satrec.xl2,\r\n    xl3 = satrec.xl3,\r\n    xl4 = satrec.xl4,\r\n    zmol = satrec.zmol,\r\n    zmos = satrec.zmos;\r\n  var init = options.init,\r\n    opsmode = options.opsmode;\r\n  var ep = options.ep,\r\n    inclp = options.inclp,\r\n    nodep = options.nodep,\r\n    argpp = options.argpp,\r\n    mp = options.mp;\r\n\r\n  // Copy satellite attributes into local variables for convenience\r\n  // and symmetry in writing formulae.\r\n\r\n  var alfdp;\r\n  var betdp;\r\n  var cosip;\r\n  var sinip;\r\n  var cosop;\r\n  var sinop;\r\n  var dalf;\r\n  var dbet;\r\n  var dls;\r\n  var f2;\r\n  var f3;\r\n  var pe;\r\n  var pgh;\r\n  var ph;\r\n  var pinc;\r\n  var pl;\r\n  var sinzf;\r\n  var xls;\r\n  var xnoh;\r\n  var zf;\r\n  var zm;\r\n\r\n  //  ---------------------- constants -----------------------------\r\n  var zns = 1.19459e-5;\r\n  var zes = 0.01675;\r\n  var znl = 1.5835218e-4;\r\n  var zel = 0.05490;\r\n\r\n  //  --------------- calculate time varying periodics -----------\r\n  zm = zmos + zns * t;\r\n\r\n  // be sure that the initial call has time set to zero\r\n  if (init === 'y') {\r\n    zm = zmos;\r\n  }\r\n  zf = zm + 2.0 * zes * Math.sin(zm);\r\n  sinzf = Math.sin(zf);\r\n  f2 = 0.5 * sinzf * sinzf - 0.25;\r\n  f3 = -0.5 * sinzf * Math.cos(zf);\r\n  var ses = se2 * f2 + se3 * f3;\r\n  var sis = si2 * f2 + si3 * f3;\r\n  var sls = sl2 * f2 + sl3 * f3 + sl4 * sinzf;\r\n  var sghs = sgh2 * f2 + sgh3 * f3 + sgh4 * sinzf;\r\n  var shs = sh2 * f2 + sh3 * f3;\r\n  zm = zmol + znl * t;\r\n  if (init === 'y') {\r\n    zm = zmol;\r\n  }\r\n  zf = zm + 2.0 * zel * Math.sin(zm);\r\n  sinzf = Math.sin(zf);\r\n  f2 = 0.5 * sinzf * sinzf - 0.25;\r\n  f3 = -0.5 * sinzf * Math.cos(zf);\r\n  var sel = ee2 * f2 + e3 * f3;\r\n  var sil = xi2 * f2 + xi3 * f3;\r\n  var sll = xl2 * f2 + xl3 * f3 + xl4 * sinzf;\r\n  var sghl = xgh2 * f2 + xgh3 * f3 + xgh4 * sinzf;\r\n  var shll = xh2 * f2 + xh3 * f3;\r\n  pe = ses + sel;\r\n  pinc = sis + sil;\r\n  pl = sls + sll;\r\n  pgh = sghs + sghl;\r\n  ph = shs + shll;\r\n  if (init === 'n') {\r\n    pe -= peo;\r\n    pinc -= pinco;\r\n    pl -= plo;\r\n    pgh -= pgho;\r\n    ph -= pho;\r\n    inclp += pinc;\r\n    ep += pe;\r\n    sinip = Math.sin(inclp);\r\n    cosip = Math.cos(inclp);\r\n\r\n    /* ----------------- apply periodics directly ------------ */\r\n    // sgp4fix for lyddane choice\r\n    // strn3 used original inclination - this is technically feasible\r\n    // gsfc used perturbed inclination - also technically feasible\r\n    // probably best to readjust the 0.2 limit value and limit discontinuity\r\n    // 0.2 rad = 11.45916 deg\r\n    // use next line for original strn3 approach and original inclination\r\n    // if (inclo >= 0.2)\r\n    // use next line for gsfc version and perturbed inclination\r\n    if (inclp >= 0.2) {\r\n      ph /= sinip;\r\n      pgh -= cosip * ph;\r\n      argpp += pgh;\r\n      nodep += ph;\r\n      mp += pl;\r\n    } else {\r\n      //  ---- apply periodics with lyddane modification ----\r\n      sinop = Math.sin(nodep);\r\n      cosop = Math.cos(nodep);\r\n      alfdp = sinip * sinop;\r\n      betdp = sinip * cosop;\r\n      dalf = ph * cosop + pinc * cosip * sinop;\r\n      dbet = -ph * sinop + pinc * cosip * cosop;\r\n      alfdp += dalf;\r\n      betdp += dbet;\r\n      nodep %= twoPi;\r\n\r\n      //  sgp4fix for afspc written intrinsic functions\r\n      //  nodep used without a trigonometric function ahead\r\n      if (nodep < 0.0 && opsmode === 'a') {\r\n        nodep += twoPi;\r\n      }\r\n      xls = mp + argpp + cosip * nodep;\r\n      dls = pl + pgh - pinc * nodep * sinip;\r\n      xls += dls;\r\n      xnoh = nodep;\r\n      nodep = Math.atan2(alfdp, betdp);\r\n\r\n      //  sgp4fix for afspc written intrinsic functions\r\n      //  nodep used without a trigonometric function ahead\r\n      if (nodep < 0.0 && opsmode === 'a') {\r\n        nodep += twoPi;\r\n      }\r\n      if (Math.abs(xnoh - nodep) > pi) {\r\n        if (nodep < xnoh) {\r\n          nodep += twoPi;\r\n        } else {\r\n          nodep -= twoPi;\r\n        }\r\n      }\r\n      mp += pl;\r\n      argpp = xls - mp - cosip * nodep;\r\n    }\r\n  }\r\n  return {\r\n    ep: ep,\r\n    inclp: inclp,\r\n    nodep: nodep,\r\n    argpp: argpp,\r\n    mp: mp\r\n  };\r\n}\r\n\r\n/*-----------------------------------------------------------------------------\r\n *\r\n *                           procedure dscom\r\n *\r\n *  this procedure provides deep space common items used by both the secular\r\n *    and periodics subroutines.  input is provided as shown. this routine\r\n *    used to be called dpper, but the functions inside weren't well organized.\r\n *\r\n *  author        : david vallado                  719-573-2600   28 jun 2005\r\n *\r\n *  inputs        :\r\n *    epoch       -\r\n *    ep          - eccentricity\r\n *    argpp       - argument of perigee\r\n *    tc          -\r\n *    inclp       - inclination\r\n *    nodep       - right ascension of ascending node\r\n *    np          - mean motion\r\n *\r\n *  outputs       :\r\n *    sinim  , cosim  , sinomm , cosomm , snodm  , cnodm\r\n *    day         -\r\n *    e3          -\r\n *    ee2         -\r\n *    em          - eccentricity\r\n *    emsq        - eccentricity squared\r\n *    gam         -\r\n *    peo         -\r\n *    pgho        -\r\n *    pho         -\r\n *    pinco       -\r\n *    plo         -\r\n *    rtemsq      -\r\n *    se2, se3         -\r\n *    sgh2, sgh3, sgh4        -\r\n *    sh2, sh3, si2, si3, sl2, sl3, sl4         -\r\n *    s1, s2, s3, s4, s5, s6, s7          -\r\n *    ss1, ss2, ss3, ss4, ss5, ss6, ss7, sz1, sz2, sz3         -\r\n *    sz11, sz12, sz13, sz21, sz22, sz23, sz31, sz32, sz33        -\r\n *    xgh2, xgh3, xgh4, xh2, xh3, xi2, xi3, xl2, xl3, xl4         -\r\n *    nm          - mean motion\r\n *    z1, z2, z3, z11, z12, z13, z21, z22, z23, z31, z32, z33         -\r\n *    zmol        -\r\n *    zmos        -\r\n *\r\n *  locals        :\r\n *    a1, a2, a3, a4, a5, a6, a7, a8, a9, a10         -\r\n *    betasq      -\r\n *    cc          -\r\n *    ctem, stem        -\r\n *    x1, x2, x3, x4, x5, x6, x7, x8          -\r\n *    xnodce      -\r\n *    xnoi        -\r\n *    zcosg  , zsing  , zcosgl , zsingl , zcosh  , zsinh  , zcoshl , zsinhl ,\r\n *    zcosi  , zsini  , zcosil , zsinil ,\r\n *    zx          -\r\n *    zy          -\r\n *\r\n *  coupling      :\r\n *    none.\r\n *\r\n *  references    :\r\n *    hoots, roehrich, norad spacetrack report #3 1980\r\n *    hoots, norad spacetrack report #6 1986\r\n *    hoots, schumacher and glover 2004\r\n *    vallado, crawford, hujsak, kelso  2006\r\n ----------------------------------------------------------------------------*/\r\nfunction dscom(options) {\r\n  var epoch = options.epoch,\r\n    ep = options.ep,\r\n    argpp = options.argpp,\r\n    tc = options.tc,\r\n    inclp = options.inclp,\r\n    nodep = options.nodep,\r\n    np = options.np;\r\n  var a1;\r\n  var a2;\r\n  var a3;\r\n  var a4;\r\n  var a5;\r\n  var a6;\r\n  var a7;\r\n  var a8;\r\n  var a9;\r\n  var a10;\r\n  var cc;\r\n  var x1;\r\n  var x2;\r\n  var x3;\r\n  var x4;\r\n  var x5;\r\n  var x6;\r\n  var x7;\r\n  var x8;\r\n  var zcosg;\r\n  var zsing;\r\n  var zcosh;\r\n  var zsinh;\r\n  var zcosi;\r\n  var zsini;\r\n  var ss1;\r\n  var ss2;\r\n  var ss3;\r\n  var ss4;\r\n  var ss5;\r\n  var ss6;\r\n  var ss7;\r\n  var sz1;\r\n  var sz2;\r\n  var sz3;\r\n  var sz11;\r\n  var sz12;\r\n  var sz13;\r\n  var sz21;\r\n  var sz22;\r\n  var sz23;\r\n  var sz31;\r\n  var sz32;\r\n  var sz33;\r\n  var s1;\r\n  var s2;\r\n  var s3;\r\n  var s4;\r\n  var s5;\r\n  var s6;\r\n  var s7;\r\n  var z1;\r\n  var z2;\r\n  var z3;\r\n  var z11;\r\n  var z12;\r\n  var z13;\r\n  var z21;\r\n  var z22;\r\n  var z23;\r\n  var z31;\r\n  var z32;\r\n  var z33;\r\n\r\n  // -------------------------- constants -------------------------\r\n  var zes = 0.01675;\r\n  var zel = 0.05490;\r\n  var c1ss = 2.9864797e-6;\r\n  var c1l = 4.7968065e-7;\r\n  var zsinis = 0.39785416;\r\n  var zcosis = 0.91744867;\r\n  var zcosgs = 0.1945905;\r\n  var zsings = -0.98088458;\r\n\r\n  //  --------------------- local variables ------------------------\r\n  var nm = np;\r\n  var em = ep;\r\n  var snodm = Math.sin(nodep);\r\n  var cnodm = Math.cos(nodep);\r\n  var sinomm = Math.sin(argpp);\r\n  var cosomm = Math.cos(argpp);\r\n  var sinim = Math.sin(inclp);\r\n  var cosim = Math.cos(inclp);\r\n  var emsq = em * em;\r\n  var betasq = 1.0 - emsq;\r\n  var rtemsq = Math.sqrt(betasq);\r\n\r\n  //  ----------------- initialize lunar solar terms ---------------\r\n  var peo = 0.0;\r\n  var pinco = 0.0;\r\n  var plo = 0.0;\r\n  var pgho = 0.0;\r\n  var pho = 0.0;\r\n  var day = epoch + 18261.5 + tc / 1440.0;\r\n  var xnodce = (4.5236020 - 9.2422029e-4 * day) % twoPi;\r\n  var stem = Math.sin(xnodce);\r\n  var ctem = Math.cos(xnodce);\r\n  var zcosil = 0.91375164 - 0.03568096 * ctem;\r\n  var zsinil = Math.sqrt(1.0 - zcosil * zcosil);\r\n  var zsinhl = 0.089683511 * stem / zsinil;\r\n  var zcoshl = Math.sqrt(1.0 - zsinhl * zsinhl);\r\n  var gam = 5.8351514 + 0.0019443680 * day;\r\n  var zx = 0.39785416 * stem / zsinil;\r\n  var zy = zcoshl * ctem + 0.91744867 * zsinhl * stem;\r\n  zx = Math.atan2(zx, zy);\r\n  zx += gam - xnodce;\r\n  var zcosgl = Math.cos(zx);\r\n  var zsingl = Math.sin(zx);\r\n\r\n  //  ------------------------- do solar terms ---------------------\r\n  zcosg = zcosgs;\r\n  zsing = zsings;\r\n  zcosi = zcosis;\r\n  zsini = zsinis;\r\n  zcosh = cnodm;\r\n  zsinh = snodm;\r\n  cc = c1ss;\r\n  var xnoi = 1.0 / nm;\r\n  var lsflg = 0;\r\n  while (lsflg < 2) {\r\n    lsflg += 1;\r\n    a1 = zcosg * zcosh + zsing * zcosi * zsinh;\r\n    a3 = -zsing * zcosh + zcosg * zcosi * zsinh;\r\n    a7 = -zcosg * zsinh + zsing * zcosi * zcosh;\r\n    a8 = zsing * zsini;\r\n    a9 = zsing * zsinh + zcosg * zcosi * zcosh;\r\n    a10 = zcosg * zsini;\r\n    a2 = cosim * a7 + sinim * a8;\r\n    a4 = cosim * a9 + sinim * a10;\r\n    a5 = -sinim * a7 + cosim * a8;\r\n    a6 = -sinim * a9 + cosim * a10;\r\n    x1 = a1 * cosomm + a2 * sinomm;\r\n    x2 = a3 * cosomm + a4 * sinomm;\r\n    x3 = -a1 * sinomm + a2 * cosomm;\r\n    x4 = -a3 * sinomm + a4 * cosomm;\r\n    x5 = a5 * sinomm;\r\n    x6 = a6 * sinomm;\r\n    x7 = a5 * cosomm;\r\n    x8 = a6 * cosomm;\r\n    z31 = 12.0 * x1 * x1 - 3.0 * x3 * x3;\r\n    z32 = 24.0 * x1 * x2 - 6.0 * x3 * x4;\r\n    z33 = 12.0 * x2 * x2 - 3.0 * x4 * x4;\r\n    z1 = 3.0 * (a1 * a1 + a2 * a2) + z31 * emsq;\r\n    z2 = 6.0 * (a1 * a3 + a2 * a4) + z32 * emsq;\r\n    z3 = 3.0 * (a3 * a3 + a4 * a4) + z33 * emsq;\r\n    z11 = -6.0 * a1 * a5 + emsq * (-24.0 * x1 * x7 - 6.0 * x3 * x5);\r\n    z12 = -6.0 * (a1 * a6 + a3 * a5) + emsq * (-24.0 * (x2 * x7 + x1 * x8) + -6.0 * (x3 * x6 + x4 * x5));\r\n    z13 = -6.0 * a3 * a6 + emsq * (-24.0 * x2 * x8 - 6.0 * x4 * x6);\r\n    z21 = 6.0 * a2 * a5 + emsq * (24.0 * x1 * x5 - 6.0 * x3 * x7);\r\n    z22 = 6.0 * (a4 * a5 + a2 * a6) + emsq * (24.0 * (x2 * x5 + x1 * x6) - 6.0 * (x4 * x7 + x3 * x8));\r\n    z23 = 6.0 * a4 * a6 + emsq * (24.0 * x2 * x6 - 6.0 * x4 * x8);\r\n    z1 = z1 + z1 + betasq * z31;\r\n    z2 = z2 + z2 + betasq * z32;\r\n    z3 = z3 + z3 + betasq * z33;\r\n    s3 = cc * xnoi;\r\n    s2 = -0.5 * s3 / rtemsq;\r\n    s4 = s3 * rtemsq;\r\n    s1 = -15.0 * em * s4;\r\n    s5 = x1 * x3 + x2 * x4;\r\n    s6 = x2 * x3 + x1 * x4;\r\n    s7 = x2 * x4 - x1 * x3;\r\n\r\n    //  ----------------------- do lunar terms -------------------\r\n    if (lsflg === 1) {\r\n      ss1 = s1;\r\n      ss2 = s2;\r\n      ss3 = s3;\r\n      ss4 = s4;\r\n      ss5 = s5;\r\n      ss6 = s6;\r\n      ss7 = s7;\r\n      sz1 = z1;\r\n      sz2 = z2;\r\n      sz3 = z3;\r\n      sz11 = z11;\r\n      sz12 = z12;\r\n      sz13 = z13;\r\n      sz21 = z21;\r\n      sz22 = z22;\r\n      sz23 = z23;\r\n      sz31 = z31;\r\n      sz32 = z32;\r\n      sz33 = z33;\r\n      zcosg = zcosgl;\r\n      zsing = zsingl;\r\n      zcosi = zcosil;\r\n      zsini = zsinil;\r\n      zcosh = zcoshl * cnodm + zsinhl * snodm;\r\n      zsinh = snodm * zcoshl - cnodm * zsinhl;\r\n      cc = c1l;\r\n    }\r\n  }\r\n  var zmol = (4.7199672 + (0.22997150 * day - gam)) % twoPi;\r\n  var zmos = (6.2565837 + 0.017201977 * day) % twoPi;\r\n\r\n  //  ------------------------ do solar terms ----------------------\r\n  var se2 = 2.0 * ss1 * ss6;\r\n  var se3 = 2.0 * ss1 * ss7;\r\n  var si2 = 2.0 * ss2 * sz12;\r\n  var si3 = 2.0 * ss2 * (sz13 - sz11);\r\n  var sl2 = -2.0 * ss3 * sz2;\r\n  var sl3 = -2.0 * ss3 * (sz3 - sz1);\r\n  var sl4 = -2.0 * ss3 * (-21.0 - 9.0 * emsq) * zes;\r\n  var sgh2 = 2.0 * ss4 * sz32;\r\n  var sgh3 = 2.0 * ss4 * (sz33 - sz31);\r\n  var sgh4 = -18.0 * ss4 * zes;\r\n  var sh2 = -2.0 * ss2 * sz22;\r\n  var sh3 = -2.0 * ss2 * (sz23 - sz21);\r\n\r\n  //  ------------------------ do lunar terms ----------------------\r\n  var ee2 = 2.0 * s1 * s6;\r\n  var e3 = 2.0 * s1 * s7;\r\n  var xi2 = 2.0 * s2 * z12;\r\n  var xi3 = 2.0 * s2 * (z13 - z11);\r\n  var xl2 = -2.0 * s3 * z2;\r\n  var xl3 = -2.0 * s3 * (z3 - z1);\r\n  var xl4 = -2.0 * s3 * (-21.0 - 9.0 * emsq) * zel;\r\n  var xgh2 = 2.0 * s4 * z32;\r\n  var xgh3 = 2.0 * s4 * (z33 - z31);\r\n  var xgh4 = -18.0 * s4 * zel;\r\n  var xh2 = -2.0 * s2 * z22;\r\n  var xh3 = -2.0 * s2 * (z23 - z21);\r\n  return {\r\n    snodm: snodm,\r\n    cnodm: cnodm,\r\n    sinim: sinim,\r\n    cosim: cosim,\r\n    sinomm: sinomm,\r\n    cosomm: cosomm,\r\n    day: day,\r\n    e3: e3,\r\n    ee2: ee2,\r\n    em: em,\r\n    emsq: emsq,\r\n    gam: gam,\r\n    peo: peo,\r\n    pgho: pgho,\r\n    pho: pho,\r\n    pinco: pinco,\r\n    plo: plo,\r\n    rtemsq: rtemsq,\r\n    se2: se2,\r\n    se3: se3,\r\n    sgh2: sgh2,\r\n    sgh3: sgh3,\r\n    sgh4: sgh4,\r\n    sh2: sh2,\r\n    sh3: sh3,\r\n    si2: si2,\r\n    si3: si3,\r\n    sl2: sl2,\r\n    sl3: sl3,\r\n    sl4: sl4,\r\n    s1: s1,\r\n    s2: s2,\r\n    s3: s3,\r\n    s4: s4,\r\n    s5: s5,\r\n    s6: s6,\r\n    s7: s7,\r\n    ss1: ss1,\r\n    ss2: ss2,\r\n    ss3: ss3,\r\n    ss4: ss4,\r\n    ss5: ss5,\r\n    ss6: ss6,\r\n    ss7: ss7,\r\n    sz1: sz1,\r\n    sz2: sz2,\r\n    sz3: sz3,\r\n    sz11: sz11,\r\n    sz12: sz12,\r\n    sz13: sz13,\r\n    sz21: sz21,\r\n    sz22: sz22,\r\n    sz23: sz23,\r\n    sz31: sz31,\r\n    sz32: sz32,\r\n    sz33: sz33,\r\n    xgh2: xgh2,\r\n    xgh3: xgh3,\r\n    xgh4: xgh4,\r\n    xh2: xh2,\r\n    xh3: xh3,\r\n    xi2: xi2,\r\n    xi3: xi3,\r\n    xl2: xl2,\r\n    xl3: xl3,\r\n    xl4: xl4,\r\n    nm: nm,\r\n    z1: z1,\r\n    z2: z2,\r\n    z3: z3,\r\n    z11: z11,\r\n    z12: z12,\r\n    z13: z13,\r\n    z21: z21,\r\n    z22: z22,\r\n    z23: z23,\r\n    z31: z31,\r\n    z32: z32,\r\n    z33: z33,\r\n    zmol: zmol,\r\n    zmos: zmos\r\n  };\r\n}\r\n\r\n/*-----------------------------------------------------------------------------\r\n *\r\n *                           procedure dsinit\r\n *\r\n *  this procedure provides deep space contributions to mean motion dot due\r\n *    to geopotential resonance with half day and one day orbits.\r\n *\r\n *  author        : david vallado                  719-573-2600   28 jun 2005\r\n *\r\n *  inputs        :\r\n *    cosim, sinim-\r\n *    emsq        - eccentricity squared\r\n *    argpo       - argument of perigee\r\n *    s1, s2, s3, s4, s5      -\r\n *    ss1, ss2, ss3, ss4, ss5 -\r\n *    sz1, sz3, sz11, sz13, sz21, sz23, sz31, sz33 -\r\n *    t           - time\r\n *    tc          -\r\n *    gsto        - greenwich sidereal time                   rad\r\n *    mo          - mean anomaly\r\n *    mdot        - mean anomaly dot (rate)\r\n *    no          - mean motion\r\n *    nodeo       - right ascension of ascending node\r\n *    nodedot     - right ascension of ascending node dot (rate)\r\n *    xpidot      -\r\n *    z1, z3, z11, z13, z21, z23, z31, z33 -\r\n *    eccm        - eccentricity\r\n *    argpm       - argument of perigee\r\n *    inclm       - inclination\r\n *    mm          - mean anomaly\r\n *    xn          - mean motion\r\n *    nodem       - right ascension of ascending node\r\n *\r\n *  outputs       :\r\n *    em          - eccentricity\r\n *    argpm       - argument of perigee\r\n *    inclm       - inclination\r\n *    mm          - mean anomaly\r\n *    nm          - mean motion\r\n *    nodem       - right ascension of ascending node\r\n *    irez        - flag for resonance           0-none, 1-one day, 2-half day\r\n *    atime       -\r\n *    d2201, d2211, d3210, d3222, d4410, d4422, d5220, d5232, d5421, d5433    -\r\n *    dedt        -\r\n *    didt        -\r\n *    dmdt        -\r\n *    dndt        -\r\n *    dnodt       -\r\n *    domdt       -\r\n *    del1, del2, del3        -\r\n *    ses  , sghl , sghs , sgs  , shl  , shs  , sis  , sls\r\n *    theta       -\r\n *    xfact       -\r\n *    xlamo       -\r\n *    xli         -\r\n *    xni\r\n *\r\n *  locals        :\r\n *    ainv2       -\r\n *    aonv        -\r\n *    cosisq      -\r\n *    eoc         -\r\n *    f220, f221, f311, f321, f322, f330, f441, f442, f522, f523, f542, f543  -\r\n *    g200, g201, g211, g300, g310, g322, g410, g422, g520, g521, g532, g533  -\r\n *    sini2       -\r\n *    temp        -\r\n *    temp1       -\r\n *    theta       -\r\n *    xno2        -\r\n *\r\n *  coupling      :\r\n *    getgravconst\r\n *\r\n *  references    :\r\n *    hoots, roehrich, norad spacetrack report #3 1980\r\n *    hoots, norad spacetrack report #6 1986\r\n *    hoots, schumacher and glover 2004\r\n *    vallado, crawford, hujsak, kelso  2006\r\n ----------------------------------------------------------------------------*/\r\nfunction dsinit(options) {\r\n  var cosim = options.cosim,\r\n    argpo = options.argpo,\r\n    s1 = options.s1,\r\n    s2 = options.s2,\r\n    s3 = options.s3,\r\n    s4 = options.s4,\r\n    s5 = options.s5,\r\n    sinim = options.sinim,\r\n    ss1 = options.ss1,\r\n    ss2 = options.ss2,\r\n    ss3 = options.ss3,\r\n    ss4 = options.ss4,\r\n    ss5 = options.ss5,\r\n    sz1 = options.sz1,\r\n    sz3 = options.sz3,\r\n    sz11 = options.sz11,\r\n    sz13 = options.sz13,\r\n    sz21 = options.sz21,\r\n    sz23 = options.sz23,\r\n    sz31 = options.sz31,\r\n    sz33 = options.sz33,\r\n    t = options.t,\r\n    tc = options.tc,\r\n    gsto = options.gsto,\r\n    mo = options.mo,\r\n    mdot = options.mdot,\r\n    no = options.no,\r\n    nodeo = options.nodeo,\r\n    nodedot = options.nodedot,\r\n    xpidot = options.xpidot,\r\n    z1 = options.z1,\r\n    z3 = options.z3,\r\n    z11 = options.z11,\r\n    z13 = options.z13,\r\n    z21 = options.z21,\r\n    z23 = options.z23,\r\n    z31 = options.z31,\r\n    z33 = options.z33,\r\n    ecco = options.ecco,\r\n    eccsq = options.eccsq;\r\n  var emsq = options.emsq,\r\n    em = options.em,\r\n    argpm = options.argpm,\r\n    inclm = options.inclm,\r\n    mm = options.mm,\r\n    nm = options.nm,\r\n    nodem = options.nodem,\r\n    irez = options.irez,\r\n    atime = options.atime,\r\n    d2201 = options.d2201,\r\n    d2211 = options.d2211,\r\n    d3210 = options.d3210,\r\n    d3222 = options.d3222,\r\n    d4410 = options.d4410,\r\n    d4422 = options.d4422,\r\n    d5220 = options.d5220,\r\n    d5232 = options.d5232,\r\n    d5421 = options.d5421,\r\n    d5433 = options.d5433,\r\n    dedt = options.dedt,\r\n    didt = options.didt,\r\n    dmdt = options.dmdt,\r\n    dnodt = options.dnodt,\r\n    domdt = options.domdt,\r\n    del1 = options.del1,\r\n    del2 = options.del2,\r\n    del3 = options.del3,\r\n    xfact = options.xfact,\r\n    xlamo = options.xlamo,\r\n    xli = options.xli,\r\n    xni = options.xni;\r\n  var f220;\r\n  var f221;\r\n  var f311;\r\n  var f321;\r\n  var f322;\r\n  var f330;\r\n  var f441;\r\n  var f442;\r\n  var f522;\r\n  var f523;\r\n  var f542;\r\n  var f543;\r\n  var g200;\r\n  var g201;\r\n  var g211;\r\n  var g300;\r\n  var g310;\r\n  var g322;\r\n  var g410;\r\n  var g422;\r\n  var g520;\r\n  var g521;\r\n  var g532;\r\n  var g533;\r\n  var sini2;\r\n  var temp;\r\n  var temp1;\r\n  var xno2;\r\n  var ainv2;\r\n  var aonv;\r\n  var cosisq;\r\n  var eoc;\r\n  var q22 = 1.7891679e-6;\r\n  var q31 = 2.1460748e-6;\r\n  var q33 = 2.2123015e-7;\r\n  var root22 = 1.7891679e-6;\r\n  var root44 = 7.3636953e-9;\r\n  var root54 = 2.1765803e-9;\r\n  // eslint-disable-next-line no-loss-of-precision\r\n  var rptim = 4.37526908801129966e-3; // equates to 7.29211514668855e-5 rad/sec\r\n  var root32 = 3.7393792e-7;\r\n  var root52 = 1.1428639e-7;\r\n  var znl = 1.5835218e-4;\r\n  var zns = 1.19459e-5;\r\n\r\n  // -------------------- deep space initialization ------------\r\n  irez = 0;\r\n  if (nm < 0.0052359877 && nm > 0.0034906585) {\r\n    irez = 1;\r\n  }\r\n  if (nm >= 8.26e-3 && nm <= 9.24e-3 && em >= 0.5) {\r\n    irez = 2;\r\n  }\r\n\r\n  // ------------------------ do solar terms -------------------\r\n  var ses = ss1 * zns * ss5;\r\n  var sis = ss2 * zns * (sz11 + sz13);\r\n  var sls = -zns * ss3 * (sz1 + sz3 - 14.0 - 6.0 * emsq);\r\n  var sghs = ss4 * zns * (sz31 + sz33 - 6.0);\r\n  var shs = -zns * ss2 * (sz21 + sz23);\r\n\r\n  // sgp4fix for 180 deg incl\r\n  if (inclm < 5.2359877e-2 || inclm > pi - 5.2359877e-2) {\r\n    shs = 0.0;\r\n  }\r\n  if (sinim !== 0.0) {\r\n    shs /= sinim;\r\n  }\r\n  var sgs = sghs - cosim * shs;\r\n\r\n  // ------------------------- do lunar terms ------------------\r\n  dedt = ses + s1 * znl * s5;\r\n  didt = sis + s2 * znl * (z11 + z13);\r\n  dmdt = sls - znl * s3 * (z1 + z3 - 14.0 - 6.0 * emsq);\r\n  var sghl = s4 * znl * (z31 + z33 - 6.0);\r\n  var shll = -znl * s2 * (z21 + z23);\r\n\r\n  // sgp4fix for 180 deg incl\r\n  if (inclm < 5.2359877e-2 || inclm > pi - 5.2359877e-2) {\r\n    shll = 0.0;\r\n  }\r\n  domdt = sgs + sghl;\r\n  dnodt = shs;\r\n  if (sinim !== 0.0) {\r\n    domdt -= cosim / sinim * shll;\r\n    dnodt += shll / sinim;\r\n  }\r\n\r\n  // ----------- calculate deep space resonance effects --------\r\n  var dndt = 0.0;\r\n  var theta = (gsto + tc * rptim) % twoPi;\r\n  em += dedt * t;\r\n  inclm += didt * t;\r\n  argpm += domdt * t;\r\n  nodem += dnodt * t;\r\n  mm += dmdt * t;\r\n\r\n  // sgp4fix for negative inclinations\r\n  // the following if statement should be commented out\r\n  // if (inclm < 0.0)\r\n  // {\r\n  //   inclm  = -inclm;\r\n  //   argpm  = argpm - pi;\r\n  //   nodem = nodem + pi;\r\n  // }\r\n\r\n  // -------------- initialize the resonance terms -------------\r\n  if (irez !== 0) {\r\n    aonv = Math.pow(nm / xke, x2o3);\r\n\r\n    // ---------- geopotential resonance for 12 hour orbits ------\r\n    if (irez === 2) {\r\n      cosisq = cosim * cosim;\r\n      var emo = em;\r\n      em = ecco;\r\n      var emsqo = emsq;\r\n      emsq = eccsq;\r\n      eoc = em * emsq;\r\n      g201 = -0.306 - (em - 0.64) * 0.440;\r\n      if (em <= 0.65) {\r\n        g211 = 3.616 - 13.2470 * em + 16.2900 * emsq;\r\n        g310 = -19.302 + 117.3900 * em - 228.4190 * emsq + 156.5910 * eoc;\r\n        g322 = -18.9068 + 109.7927 * em - 214.6334 * emsq + 146.5816 * eoc;\r\n        g410 = -41.122 + 242.6940 * em - 471.0940 * emsq + 313.9530 * eoc;\r\n        g422 = -146.407 + 841.8800 * em - 1629.014 * emsq + 1083.4350 * eoc;\r\n        g520 = -532.114 + 3017.977 * em - 5740.032 * emsq + 3708.2760 * eoc;\r\n      } else {\r\n        g211 = -72.099 + 331.819 * em - 508.738 * emsq + 266.724 * eoc;\r\n        g310 = -346.844 + 1582.851 * em - 2415.925 * emsq + 1246.113 * eoc;\r\n        g322 = -342.585 + 1554.908 * em - 2366.899 * emsq + 1215.972 * eoc;\r\n        g410 = -1052.797 + 4758.686 * em - 7193.992 * emsq + 3651.957 * eoc;\r\n        g422 = -3581.690 + 16178.110 * em - 24462.770 * emsq + 12422.520 * eoc;\r\n        if (em > 0.715) {\r\n          g520 = -5149.66 + 29936.92 * em - 54087.36 * emsq + 31324.56 * eoc;\r\n        } else {\r\n          g520 = 1464.74 - 4664.75 * em + 3763.64 * emsq;\r\n        }\r\n      }\r\n      if (em < 0.7) {\r\n        g533 = -919.22770 + 4988.6100 * em - 9064.7700 * emsq + 5542.21 * eoc;\r\n        g521 = -822.71072 + 4568.6173 * em - 8491.4146 * emsq + 5337.524 * eoc;\r\n        g532 = -853.66600 + 4690.2500 * em - 8624.7700 * emsq + 5341.4 * eoc;\r\n      } else {\r\n        g533 = -37995.780 + 161616.52 * em - 229838.20 * emsq + 109377.94 * eoc;\r\n        g521 = -51752.104 + 218913.95 * em - 309468.16 * emsq + 146349.42 * eoc;\r\n        g532 = -40023.880 + 170470.89 * em - 242699.48 * emsq + 115605.82 * eoc;\r\n      }\r\n      sini2 = sinim * sinim;\r\n      f220 = 0.75 * (1.0 + 2.0 * cosim + cosisq);\r\n      f221 = 1.5 * sini2;\r\n      f321 = 1.875 * sinim * (1.0 - 2.0 * cosim - 3.0 * cosisq);\r\n      f322 = -1.875 * sinim * (1.0 + 2.0 * cosim - 3.0 * cosisq);\r\n      f441 = 35.0 * sini2 * f220;\r\n      f442 = 39.3750 * sini2 * sini2;\r\n      f522 = 9.84375 * sinim * (sini2 * (1.0 - 2.0 * cosim - 5.0 * cosisq) + 0.33333333 * (-2.0 + 4.0 * cosim + 6.0 * cosisq));\r\n      f523 = sinim * (4.92187512 * sini2 * (-2.0 - 4.0 * cosim + 10.0 * cosisq) + 6.56250012 * (1.0 + 2.0 * cosim - 3.0 * cosisq));\r\n      f542 = 29.53125 * sinim * (2.0 - 8.0 * cosim + cosisq * (-12.0 + 8.0 * cosim + 10.0 * cosisq));\r\n      f543 = 29.53125 * sinim * (-2.0 - 8.0 * cosim + cosisq * (12.0 + 8.0 * cosim - 10.0 * cosisq));\r\n      xno2 = nm * nm;\r\n      ainv2 = aonv * aonv;\r\n      temp1 = 3.0 * xno2 * ainv2;\r\n      temp = temp1 * root22;\r\n      d2201 = temp * f220 * g201;\r\n      d2211 = temp * f221 * g211;\r\n      temp1 *= aonv;\r\n      temp = temp1 * root32;\r\n      d3210 = temp * f321 * g310;\r\n      d3222 = temp * f322 * g322;\r\n      temp1 *= aonv;\r\n      temp = 2.0 * temp1 * root44;\r\n      d4410 = temp * f441 * g410;\r\n      d4422 = temp * f442 * g422;\r\n      temp1 *= aonv;\r\n      temp = temp1 * root52;\r\n      d5220 = temp * f522 * g520;\r\n      d5232 = temp * f523 * g532;\r\n      temp = 2.0 * temp1 * root54;\r\n      d5421 = temp * f542 * g521;\r\n      d5433 = temp * f543 * g533;\r\n      xlamo = (mo + nodeo + nodeo - (theta + theta)) % twoPi;\r\n      xfact = mdot + dmdt + 2.0 * (nodedot + dnodt - rptim) - no;\r\n      em = emo;\r\n      emsq = emsqo;\r\n    }\r\n\r\n    //  ---------------- synchronous resonance terms --------------\r\n    if (irez === 1) {\r\n      g200 = 1.0 + emsq * (-2.5 + 0.8125 * emsq);\r\n      g310 = 1.0 + 2.0 * emsq;\r\n      g300 = 1.0 + emsq * (-6.0 + 6.60937 * emsq);\r\n      f220 = 0.75 * (1.0 + cosim) * (1.0 + cosim);\r\n      f311 = 0.9375 * sinim * sinim * (1.0 + 3.0 * cosim) - 0.75 * (1.0 + cosim);\r\n      f330 = 1.0 + cosim;\r\n      f330 *= 1.875 * f330 * f330;\r\n      del1 = 3.0 * nm * nm * aonv * aonv;\r\n      del2 = 2.0 * del1 * f220 * g200 * q22;\r\n      del3 = 3.0 * del1 * f330 * g300 * q33 * aonv;\r\n      del1 = del1 * f311 * g310 * q31 * aonv;\r\n      xlamo = (mo + nodeo + argpo - theta) % twoPi;\r\n      xfact = mdot + xpidot + dmdt + domdt + dnodt - (no + rptim);\r\n    }\r\n\r\n    //  ------------ for sgp4, initialize the integrator ----------\r\n    xli = xlamo;\r\n    xni = no;\r\n    atime = 0.0;\r\n    nm = no + dndt;\r\n  }\r\n  return {\r\n    em: em,\r\n    argpm: argpm,\r\n    inclm: inclm,\r\n    mm: mm,\r\n    nm: nm,\r\n    nodem: nodem,\r\n    irez: irez,\r\n    atime: atime,\r\n    d2201: d2201,\r\n    d2211: d2211,\r\n    d3210: d3210,\r\n    d3222: d3222,\r\n    d4410: d4410,\r\n    d4422: d4422,\r\n    d5220: d5220,\r\n    d5232: d5232,\r\n    d5421: d5421,\r\n    d5433: d5433,\r\n    dedt: dedt,\r\n    didt: didt,\r\n    dmdt: dmdt,\r\n    dndt: dndt,\r\n    dnodt: dnodt,\r\n    domdt: domdt,\r\n    del1: del1,\r\n    del2: del2,\r\n    del3: del3,\r\n    xfact: xfact,\r\n    xlamo: xlamo,\r\n    xli: xli,\r\n    xni: xni\r\n  };\r\n}\r\n\r\n/* -----------------------------------------------------------------------------\r\n *\r\n *                           function gstime\r\n *\r\n *  this function finds the greenwich sidereal time.\r\n *\r\n *  author        : david vallado                  719-573-2600    1 mar 2001\r\n *\r\n *  inputs          description                    range / units\r\n *    jdut1       - julian date in ut1             days from 4713 bc\r\n *\r\n *  outputs       :\r\n *    gstime      - greenwich sidereal time        0 to 2pi rad\r\n *\r\n *  locals        :\r\n *    temp        - temporary variable for doubles   rad\r\n *    tut1        - julian centuries from the\r\n *                  jan 1, 2000 12 h epoch (ut1)\r\n *\r\n *  coupling      :\r\n *    none\r\n *\r\n *  references    :\r\n *    vallado       2004, 191, eq 3-45\r\n * --------------------------------------------------------------------------- */\r\nfunction gstimeInternal(jdut1) {\r\n  var tut1 = (jdut1 - 2451545.0) / 36525.0;\r\n  var temp = -6.2e-6 * tut1 * tut1 * tut1 + 0.093104 * tut1 * tut1 + (876600.0 * 3600 + 8640184.812866) * tut1 + 67310.54841; // # sec\r\n  temp = temp * deg2rad / 240.0 % twoPi; // 360/86400 = 1/240, to deg, to rad\r\n\r\n  //  ------------------------ check quadrants ---------------------\r\n  if (temp < 0.0) {\r\n    temp += twoPi;\r\n  }\r\n  return temp;\r\n}\r\nfunction gstime() {\r\n  if ((arguments.length <= 0 ? undefined : arguments[0]) instanceof Date || arguments.length > 1) {\r\n    return gstimeInternal(jday.apply(void 0, arguments));\r\n  }\r\n  return gstimeInternal.apply(void 0, arguments);\r\n}\r\n\r\n/*-----------------------------------------------------------------------------\r\n *\r\n *                           procedure initl\r\n *\r\n *  this procedure initializes the sgp4 propagator. all the initialization is\r\n *    consolidated here instead of having multiple loops inside other routines.\r\n *\r\n *  author        : david vallado                  719-573-2600   28 jun 2005\r\n *\r\n *  inputs        :\r\n *    ecco        - eccentricity                           0.0 - 1.0\r\n *    epoch       - epoch time in days from jan 0, 1950. 0 hr\r\n *    inclo       - inclination of satellite\r\n *    no          - mean motion of satellite\r\n *    satn        - satellite number\r\n *\r\n *  outputs       :\r\n *    ainv        - 1.0 / a\r\n *    ao          - semi major axis\r\n *    con41       -\r\n *    con42       - 1.0 - 5.0 cos(i)\r\n *    cosio       - cosine of inclination\r\n *    cosio2      - cosio squared\r\n *    eccsq       - eccentricity squared\r\n *    method      - flag for deep space                    'd', 'n'\r\n *    omeosq      - 1.0 - ecco * ecco\r\n *    posq        - semi-parameter squared\r\n *    rp          - radius of perigee\r\n *    rteosq      - square root of (1.0 - ecco*ecco)\r\n *    sinio       - sine of inclination\r\n *    gsto        - gst at time of observation               rad\r\n *    no          - mean motion of satellite\r\n *\r\n *  locals        :\r\n *    ak          -\r\n *    d1          -\r\n *    del         -\r\n *    adel        -\r\n *    po          -\r\n *\r\n *  coupling      :\r\n *    getgravconst\r\n *    gstime      - find greenwich sidereal time from the julian date\r\n *\r\n *  references    :\r\n *    hoots, roehrich, norad spacetrack report #3 1980\r\n *    hoots, norad spacetrack report #6 1986\r\n *    hoots, schumacher and glover 2004\r\n *    vallado, crawford, hujsak, kelso  2006\r\n ----------------------------------------------------------------------------*/\r\nfunction initl(options) {\r\n  var ecco = options.ecco,\r\n    epoch = options.epoch,\r\n    inclo = options.inclo,\r\n    opsmode = options.opsmode;\r\n  var no = options.no;\r\n\r\n  // sgp4fix use old way of finding gst\r\n  // ----------------------- earth constants ---------------------\r\n  // sgp4fix identify constants and allow alternate values\r\n\r\n  // ------------- calculate auxillary epoch quantities ----------\r\n  var eccsq = ecco * ecco;\r\n  var omeosq = 1.0 - eccsq;\r\n  var rteosq = Math.sqrt(omeosq);\r\n  var cosio = Math.cos(inclo);\r\n  var cosio2 = cosio * cosio;\r\n\r\n  // ------------------ un-kozai the mean motion -----------------\r\n  var ak = Math.pow(xke / no, x2o3);\r\n  var d1 = 0.75 * j2 * (3.0 * cosio2 - 1.0) / (rteosq * omeosq);\r\n  var delPrime = d1 / (ak * ak);\r\n  var adel = ak * (1.0 - delPrime * delPrime - delPrime * (1.0 / 3.0 + 134.0 * delPrime * delPrime / 81.0));\r\n  delPrime = d1 / (adel * adel);\r\n  no /= 1.0 + delPrime;\r\n  var ao = Math.pow(xke / no, x2o3);\r\n  var sinio = Math.sin(inclo);\r\n  var po = ao * omeosq;\r\n  var con42 = 1.0 - 5.0 * cosio2;\r\n  var con41 = -con42 - cosio2 - cosio2;\r\n  var ainv = 1.0 / ao;\r\n  var posq = po * po;\r\n  var rp = ao * (1.0 - ecco);\r\n  var method = 'n';\r\n\r\n  //  sgp4fix modern approach to finding sidereal time\r\n  var gsto;\r\n  if (opsmode === 'a') {\r\n    //  sgp4fix use old way of finding gst\r\n    //  count integer number of days from 0 jan 1970\r\n    var ts70 = epoch - 7305.0;\r\n    var ds70 = Math.floor(ts70 + 1.0e-8);\r\n    var tfrac = ts70 - ds70;\r\n\r\n    //  find greenwich location at epoch\r\n    var c1 = 1.72027916940703639e-2; // eslint-disable-line no-loss-of-precision\r\n    var thgr70 = 1.7321343856509374; // eslint-disable-line no-loss-of-precision\r\n    var fk5r = 5.07551419432269442e-15; // eslint-disable-line no-loss-of-precision\r\n    var c1p2p = c1 + twoPi;\r\n    gsto = (thgr70 + c1 * ds70 + c1p2p * tfrac + ts70 * ts70 * fk5r) % twoPi;\r\n    if (gsto < 0.0) {\r\n      gsto += twoPi;\r\n    }\r\n  } else {\r\n    gsto = gstime(epoch + 2433281.5);\r\n  }\r\n  return {\r\n    no: no,\r\n    method: method,\r\n    ainv: ainv,\r\n    ao: ao,\r\n    con41: con41,\r\n    con42: con42,\r\n    cosio: cosio,\r\n    cosio2: cosio2,\r\n    eccsq: eccsq,\r\n    omeosq: omeosq,\r\n    posq: posq,\r\n    rp: rp,\r\n    rteosq: rteosq,\r\n    sinio: sinio,\r\n    gsto: gsto\r\n  };\r\n}\r\n\r\n/*-----------------------------------------------------------------------------\r\n *\r\n *                           procedure dspace\r\n *\r\n *  this procedure provides deep space contributions to mean elements for\r\n *    perturbing third body.  these effects have been averaged over one\r\n *    revolution of the sun and moon.  for earth resonance effects, the\r\n *    effects have been averaged over no revolutions of the satellite.\r\n *    (mean motion)\r\n *\r\n *  author        : david vallado                  719-573-2600   28 jun 2005\r\n *\r\n *  inputs        :\r\n *    d2201, d2211, d3210, d3222, d4410, d4422, d5220, d5232, d5421, d5433 -\r\n *    dedt        -\r\n *    del1, del2, del3  -\r\n *    didt        -\r\n *    dmdt        -\r\n *    dnodt       -\r\n *    domdt       -\r\n *    irez        - flag for resonance           0-none, 1-one day, 2-half day\r\n *    argpo       - argument of perigee\r\n *    argpdot     - argument of perigee dot (rate)\r\n *    t           - time\r\n *    tc          -\r\n *    gsto        - gst\r\n *    xfact       -\r\n *    xlamo       -\r\n *    no          - mean motion\r\n *    atime       -\r\n *    em          - eccentricity\r\n *    ft          -\r\n *    argpm       - argument of perigee\r\n *    inclm       - inclination\r\n *    xli         -\r\n *    mm          - mean anomaly\r\n *    xni         - mean motion\r\n *    nodem       - right ascension of ascending node\r\n *\r\n *  outputs       :\r\n *    atime       -\r\n *    em          - eccentricity\r\n *    argpm       - argument of perigee\r\n *    inclm       - inclination\r\n *    xli         -\r\n *    mm          - mean anomaly\r\n *    xni         -\r\n *    nodem       - right ascension of ascending node\r\n *    dndt        -\r\n *    nm          - mean motion\r\n *\r\n *  locals        :\r\n *    delt        -\r\n *    ft          -\r\n *    theta       -\r\n *    x2li        -\r\n *    x2omi       -\r\n *    xl          -\r\n *    xldot       -\r\n *    xnddt       -\r\n *    xndt        -\r\n *    xomi        -\r\n *\r\n *  coupling      :\r\n *    none        -\r\n *\r\n *  references    :\r\n *    hoots, roehrich, norad spacetrack report #3 1980\r\n *    hoots, norad spacetrack report #6 1986\r\n *    hoots, schumacher and glover 2004\r\n *    vallado, crawford, hujsak, kelso  2006\r\n ----------------------------------------------------------------------------*/\r\nfunction dspace(options) {\r\n  var irez = options.irez,\r\n    d2201 = options.d2201,\r\n    d2211 = options.d2211,\r\n    d3210 = options.d3210,\r\n    d3222 = options.d3222,\r\n    d4410 = options.d4410,\r\n    d4422 = options.d4422,\r\n    d5220 = options.d5220,\r\n    d5232 = options.d5232,\r\n    d5421 = options.d5421,\r\n    d5433 = options.d5433,\r\n    dedt = options.dedt,\r\n    del1 = options.del1,\r\n    del2 = options.del2,\r\n    del3 = options.del3,\r\n    didt = options.didt,\r\n    dmdt = options.dmdt,\r\n    dnodt = options.dnodt,\r\n    domdt = options.domdt,\r\n    argpo = options.argpo,\r\n    argpdot = options.argpdot,\r\n    t = options.t,\r\n    tc = options.tc,\r\n    gsto = options.gsto,\r\n    xfact = options.xfact,\r\n    xlamo = options.xlamo,\r\n    no = options.no;\r\n  var atime = options.atime,\r\n    em = options.em,\r\n    argpm = options.argpm,\r\n    inclm = options.inclm,\r\n    xli = options.xli,\r\n    mm = options.mm,\r\n    xni = options.xni,\r\n    nodem = options.nodem,\r\n    nm = options.nm;\r\n  var fasx2 = 0.13130908;\r\n  var fasx4 = 2.8843198;\r\n  var fasx6 = 0.37448087;\r\n  var g22 = 5.7686396;\r\n  var g32 = 0.95240898;\r\n  var g44 = 1.8014998;\r\n  var g52 = 1.0508330;\r\n  var g54 = 4.4108898;\r\n  // eslint-disable-next-line no-loss-of-precision\r\n  var rptim = 4.37526908801129966e-3; // equates to 7.29211514668855e-5 rad/sec\r\n  var stepp = 720.0;\r\n  var stepn = -720.0;\r\n  var step2 = 259200.0;\r\n  var delt;\r\n  var x2li;\r\n  var x2omi;\r\n  var xl;\r\n  var xldot;\r\n  var xnddt;\r\n  var xndt;\r\n  var xomi;\r\n  var dndt = 0.0;\r\n  var ft = 0.0;\r\n\r\n  //  ----------- calculate deep space resonance effects -----------\r\n  var theta = (gsto + tc * rptim) % twoPi;\r\n  em += dedt * t;\r\n  inclm += didt * t;\r\n  argpm += domdt * t;\r\n  nodem += dnodt * t;\r\n  mm += dmdt * t;\r\n\r\n  // sgp4fix for negative inclinations\r\n  // the following if statement should be commented out\r\n  // if (inclm < 0.0)\r\n  // {\r\n  //   inclm = -inclm;\r\n  //   argpm = argpm - pi;\r\n  //   nodem = nodem + pi;\r\n  // }\r\n\r\n  /* - update resonances : numerical (euler-maclaurin) integration - */\r\n  /* ------------------------- epoch restart ----------------------  */\r\n  //   sgp4fix for propagator problems\r\n  //   the following integration works for negative time steps and periods\r\n  //   the specific changes are unknown because the original code was so convoluted\r\n\r\n  // sgp4fix take out atime = 0.0 and fix for faster operation\r\n\r\n  if (irez !== 0) {\r\n    //  sgp4fix streamline check\r\n    if (atime === 0.0 || t * atime <= 0.0 || Math.abs(t) < Math.abs(atime)) {\r\n      atime = 0.0;\r\n      xni = no;\r\n      xli = xlamo;\r\n    }\r\n\r\n    // sgp4fix move check outside loop\r\n    if (t > 0.0) {\r\n      delt = stepp;\r\n    } else {\r\n      delt = stepn;\r\n    }\r\n    var iretn = 381; // added for do loop\r\n    while (iretn === 381) {\r\n      //  ------------------- dot terms calculated -------------\r\n      //  ----------- near - synchronous resonance terms -------\r\n      if (irez !== 2) {\r\n        xndt = del1 * Math.sin(xli - fasx2) + del2 * Math.sin(2.0 * (xli - fasx4)) + del3 * Math.sin(3.0 * (xli - fasx6));\r\n        xldot = xni + xfact;\r\n        xnddt = del1 * Math.cos(xli - fasx2) + 2.0 * del2 * Math.cos(2.0 * (xli - fasx4)) + 3.0 * del3 * Math.cos(3.0 * (xli - fasx6));\r\n        xnddt *= xldot;\r\n      } else {\r\n        // --------- near - half-day resonance terms --------\r\n        xomi = argpo + argpdot * atime;\r\n        x2omi = xomi + xomi;\r\n        x2li = xli + xli;\r\n        xndt = d2201 * Math.sin(x2omi + xli - g22) + d2211 * Math.sin(xli - g22) + d3210 * Math.sin(xomi + xli - g32) + d3222 * Math.sin(-xomi + xli - g32) + d4410 * Math.sin(x2omi + x2li - g44) + d4422 * Math.sin(x2li - g44) + d5220 * Math.sin(xomi + xli - g52) + d5232 * Math.sin(-xomi + xli - g52) + d5421 * Math.sin(xomi + x2li - g54) + d5433 * Math.sin(-xomi + x2li - g54);\r\n        xldot = xni + xfact;\r\n        xnddt = d2201 * Math.cos(x2omi + xli - g22) + d2211 * Math.cos(xli - g22) + d3210 * Math.cos(xomi + xli - g32) + d3222 * Math.cos(-xomi + xli - g32) + d5220 * Math.cos(xomi + xli - g52) + d5232 * Math.cos(-xomi + xli - g52) + 2.0 * (d4410 * Math.cos(x2omi + x2li - g44) + d4422 * Math.cos(x2li - g44) + d5421 * Math.cos(xomi + x2li - g54) + d5433 * Math.cos(-xomi + x2li - g54));\r\n        xnddt *= xldot;\r\n      }\r\n\r\n      //  ----------------------- integrator -------------------\r\n      //  sgp4fix move end checks to end of routine\r\n      if (Math.abs(t - atime) >= stepp) {\r\n        iretn = 381;\r\n      } else {\r\n        ft = t - atime;\r\n        iretn = 0;\r\n      }\r\n      if (iretn === 381) {\r\n        xli += xldot * delt + xndt * step2;\r\n        xni += xndt * delt + xnddt * step2;\r\n        atime += delt;\r\n      }\r\n    }\r\n    nm = xni + xndt * ft + xnddt * ft * ft * 0.5;\r\n    xl = xli + xldot * ft + xndt * ft * ft * 0.5;\r\n    if (irez !== 1) {\r\n      mm = xl - 2.0 * nodem + 2.0 * theta;\r\n      dndt = nm - no;\r\n    } else {\r\n      mm = xl - nodem - argpm + theta;\r\n      dndt = nm - no;\r\n    }\r\n    nm = no + dndt;\r\n  }\r\n  return {\r\n    atime: atime,\r\n    em: em,\r\n    argpm: argpm,\r\n    inclm: inclm,\r\n    xli: xli,\r\n    mm: mm,\r\n    xni: xni,\r\n    nodem: nodem,\r\n    dndt: dndt,\r\n    nm: nm\r\n  };\r\n}\r\n\r\n/*----------------------------------------------------------------------------\r\n *\r\n *                             procedure sgp4\r\n *\r\n *  this procedure is the sgp4 prediction model from space command. this is an\r\n *    updated and combined version of sgp4 and sdp4, which were originally\r\n *    published separately in spacetrack report //3. this version follows the\r\n *    methodology from the aiaa paper (2006) describing the history and\r\n *    development of the code.\r\n *\r\n *  author        : david vallado                  719-573-2600   28 jun 2005\r\n *\r\n *  inputs        :\r\n *    satrec  - initialised structure from sgp4init() call.\r\n *    tsince  - time since epoch (minutes)\r\n *\r\n *  outputs       :\r\n *    r           - position vector                     km\r\n *    v           - velocity                            km/sec\r\n *  return code - non-zero on error.\r\n *                   1 - mean elements, ecc >= 1.0 or ecc < -0.001 or a < 0.95 er\r\n *                   2 - mean motion less than 0.0\r\n *                   3 - pert elements, ecc < 0.0  or  ecc > 1.0\r\n *                   4 - semi-latus rectum < 0.0\r\n *                   5 - epoch elements are sub-orbital\r\n *                   6 - satellite has decayed\r\n *\r\n *  locals        :\r\n *    am          -\r\n *    axnl, aynl        -\r\n *    betal       -\r\n *    cosim   , sinim   , cosomm  , sinomm  , cnod    , snod    , cos2u   ,\r\n *    sin2u   , coseo1  , sineo1  , cosi    , sini    , cosip   , sinip   ,\r\n *    cosisq  , cossu   , sinsu   , cosu    , sinu\r\n *    delm        -\r\n *    delomg      -\r\n *    dndt        -\r\n *    eccm        -\r\n *    emsq        -\r\n *    ecose       -\r\n *    el2         -\r\n *    eo1         -\r\n *    eccp        -\r\n *    esine       -\r\n *    argpm       -\r\n *    argpp       -\r\n *    omgadf      -\r\n *    pl          -\r\n *    r           -\r\n *    rtemsq      -\r\n *    rdotl       -\r\n *    rl          -\r\n *    rvdot       -\r\n *    rvdotl      -\r\n *    su          -\r\n *    t2  , t3   , t4    , tc\r\n *    tem5, temp , temp1 , temp2  , tempa  , tempe  , templ\r\n *    u   , ux   , uy    , uz     , vx     , vy     , vz\r\n *    inclm       - inclination\r\n *    mm          - mean anomaly\r\n *    nm          - mean motion\r\n *    nodem       - right asc of ascending node\r\n *    xinc        -\r\n *    xincp       -\r\n *    xl          -\r\n *    xlm         -\r\n *    mp          -\r\n *    xmdf        -\r\n *    xmx         -\r\n *    xmy         -\r\n *    nodedf      -\r\n *    xnode       -\r\n *    nodep       -\r\n *    np          -\r\n *\r\n *  coupling      :\r\n *    getgravconst-\r\n *    dpper\r\n *    dspace\r\n *\r\n *  references    :\r\n *    hoots, roehrich, norad spacetrack report //3 1980\r\n *    hoots, norad spacetrack report //6 1986\r\n *    hoots, schumacher and glover 2004\r\n *    vallado, crawford, hujsak, kelso  2006\r\n ----------------------------------------------------------------------------*/\r\nfunction sgp4(satrec, tsince) {\r\n  /* eslint-disable no-param-reassign */\r\n\r\n  var coseo1;\r\n  var sineo1;\r\n  var cosip;\r\n  var sinip;\r\n  var cosisq;\r\n  var delm;\r\n  var delomg;\r\n  var eo1;\r\n  var argpm;\r\n  var argpp;\r\n  var su;\r\n  var t3;\r\n  var t4;\r\n  var tc;\r\n  var tem5;\r\n  var temp;\r\n  var tempa;\r\n  var tempe;\r\n  var templ;\r\n  var inclm;\r\n  var mm;\r\n  var nm;\r\n  var nodem;\r\n  var xincp;\r\n  var xlm;\r\n  var mp;\r\n  var nodep;\r\n\r\n  /* ------------------ set mathematical constants --------------- */\r\n  // sgp4fix divisor for divide by zero check on inclination\r\n  // the old check used 1.0 + cos(pi-1.0e-9), but then compared it to\r\n  // 1.5 e-12, so the threshold was changed to 1.5e-12 for consistency\r\n\r\n  var temp4 = 1.5e-12;\r\n\r\n  // --------------------- clear sgp4 error flag -----------------\r\n  satrec.t = tsince;\r\n  satrec.error = 0;\r\n\r\n  //  ------- update for secular gravity and atmospheric drag -----\r\n  var xmdf = satrec.mo + satrec.mdot * satrec.t;\r\n  var argpdf = satrec.argpo + satrec.argpdot * satrec.t;\r\n  var nodedf = satrec.nodeo + satrec.nodedot * satrec.t;\r\n  argpm = argpdf;\r\n  mm = xmdf;\r\n  var t2 = satrec.t * satrec.t;\r\n  nodem = nodedf + satrec.nodecf * t2;\r\n  tempa = 1.0 - satrec.cc1 * satrec.t;\r\n  tempe = satrec.bstar * satrec.cc4 * satrec.t;\r\n  templ = satrec.t2cof * t2;\r\n  if (satrec.isimp !== 1) {\r\n    delomg = satrec.omgcof * satrec.t;\r\n    //  sgp4fix use mutliply for speed instead of pow\r\n    var delmtemp = 1.0 + satrec.eta * Math.cos(xmdf);\r\n    delm = satrec.xmcof * (delmtemp * delmtemp * delmtemp - satrec.delmo);\r\n    temp = delomg + delm;\r\n    mm = xmdf + temp;\r\n    argpm = argpdf - temp;\r\n    t3 = t2 * satrec.t;\r\n    t4 = t3 * satrec.t;\r\n    tempa = tempa - satrec.d2 * t2 - satrec.d3 * t3 - satrec.d4 * t4;\r\n    tempe += satrec.bstar * satrec.cc5 * (Math.sin(mm) - satrec.sinmao);\r\n    templ = templ + satrec.t3cof * t3 + t4 * (satrec.t4cof + satrec.t * satrec.t5cof);\r\n  }\r\n  nm = satrec.no;\r\n  var em = satrec.ecco;\r\n  inclm = satrec.inclo;\r\n  if (satrec.method === 'd') {\r\n    tc = satrec.t;\r\n    var dspaceOptions = {\r\n      irez: satrec.irez,\r\n      d2201: satrec.d2201,\r\n      d2211: satrec.d2211,\r\n      d3210: satrec.d3210,\r\n      d3222: satrec.d3222,\r\n      d4410: satrec.d4410,\r\n      d4422: satrec.d4422,\r\n      d5220: satrec.d5220,\r\n      d5232: satrec.d5232,\r\n      d5421: satrec.d5421,\r\n      d5433: satrec.d5433,\r\n      dedt: satrec.dedt,\r\n      del1: satrec.del1,\r\n      del2: satrec.del2,\r\n      del3: satrec.del3,\r\n      didt: satrec.didt,\r\n      dmdt: satrec.dmdt,\r\n      dnodt: satrec.dnodt,\r\n      domdt: satrec.domdt,\r\n      argpo: satrec.argpo,\r\n      argpdot: satrec.argpdot,\r\n      t: satrec.t,\r\n      tc: tc,\r\n      gsto: satrec.gsto,\r\n      xfact: satrec.xfact,\r\n      xlamo: satrec.xlamo,\r\n      no: satrec.no,\r\n      atime: satrec.atime,\r\n      em: em,\r\n      argpm: argpm,\r\n      inclm: inclm,\r\n      xli: satrec.xli,\r\n      mm: mm,\r\n      xni: satrec.xni,\r\n      nodem: nodem,\r\n      nm: nm\r\n    };\r\n    var dspaceResult = dspace(dspaceOptions);\r\n    em = dspaceResult.em;\r\n    argpm = dspaceResult.argpm;\r\n    inclm = dspaceResult.inclm;\r\n    mm = dspaceResult.mm;\r\n    nodem = dspaceResult.nodem;\r\n    nm = dspaceResult.nm;\r\n  }\r\n  if (nm <= 0.0) {\r\n    // printf(\"// error nm %f\\n\", nm);\r\n    satrec.error = 2;\r\n    // sgp4fix add return\r\n    return [false, false];\r\n  }\r\n  var am = Math.pow(xke / nm, x2o3) * tempa * tempa;\r\n  nm = xke / Math.pow(am, 1.5);\r\n  em -= tempe;\r\n\r\n  // fix tolerance for error recognition\r\n  // sgp4fix am is fixed from the previous nm check\r\n  if (em >= 1.0 || em < -0.001) {\r\n    // || (am < 0.95)\r\n    // printf(\"// error em %f\\n\", em);\r\n    satrec.error = 1;\r\n    // sgp4fix to return if there is an error in eccentricity\r\n    return [false, false];\r\n  }\r\n\r\n  //  sgp4fix fix tolerance to avoid a divide by zero\r\n  if (em < 1.0e-6) {\r\n    em = 1.0e-6;\r\n  }\r\n  mm += satrec.no * templ;\r\n  xlm = mm + argpm + nodem;\r\n  nodem %= twoPi;\r\n  argpm %= twoPi;\r\n  xlm %= twoPi;\r\n  mm = (xlm - argpm - nodem) % twoPi;\r\n\r\n  // ----------------- compute extra mean quantities -------------\r\n  var sinim = Math.sin(inclm);\r\n  var cosim = Math.cos(inclm);\r\n\r\n  // -------------------- add lunar-solar periodics --------------\r\n  var ep = em;\r\n  xincp = inclm;\r\n  argpp = argpm;\r\n  nodep = nodem;\r\n  mp = mm;\r\n  sinip = sinim;\r\n  cosip = cosim;\r\n  if (satrec.method === 'd') {\r\n    var dpperParameters = {\r\n      inclo: satrec.inclo,\r\n      init: 'n',\r\n      ep: ep,\r\n      inclp: xincp,\r\n      nodep: nodep,\r\n      argpp: argpp,\r\n      mp: mp,\r\n      opsmode: satrec.operationmode\r\n    };\r\n    var dpperResult = dpper(satrec, dpperParameters);\r\n    ep = dpperResult.ep;\r\n    nodep = dpperResult.nodep;\r\n    argpp = dpperResult.argpp;\r\n    mp = dpperResult.mp;\r\n    xincp = dpperResult.inclp;\r\n    if (xincp < 0.0) {\r\n      xincp = -xincp;\r\n      nodep += pi;\r\n      argpp -= pi;\r\n    }\r\n    if (ep < 0.0 || ep > 1.0) {\r\n      //  printf(\"// error ep %f\\n\", ep);\r\n      satrec.error = 3;\r\n      //  sgp4fix add return\r\n      return [false, false];\r\n    }\r\n  }\r\n\r\n  //  -------------------- long period periodics ------------------\r\n  if (satrec.method === 'd') {\r\n    sinip = Math.sin(xincp);\r\n    cosip = Math.cos(xincp);\r\n    satrec.aycof = -0.5 * j3oj2 * sinip;\r\n\r\n    //  sgp4fix for divide by zero for xincp = 180 deg\r\n    if (Math.abs(cosip + 1.0) > 1.5e-12) {\r\n      satrec.xlcof = -0.25 * j3oj2 * sinip * (3.0 + 5.0 * cosip) / (1.0 + cosip);\r\n    } else {\r\n      satrec.xlcof = -0.25 * j3oj2 * sinip * (3.0 + 5.0 * cosip) / temp4;\r\n    }\r\n  }\r\n  var axnl = ep * Math.cos(argpp);\r\n  temp = 1.0 / (am * (1.0 - ep * ep));\r\n  var aynl = ep * Math.sin(argpp) + temp * satrec.aycof;\r\n  var xl = mp + argpp + nodep + temp * satrec.xlcof * axnl;\r\n\r\n  // --------------------- solve kepler's equation ---------------\r\n  var u = (xl - nodep) % twoPi;\r\n  eo1 = u;\r\n  tem5 = 9999.9;\r\n  var ktr = 1;\r\n\r\n  //    sgp4fix for kepler iteration\r\n  //    the following iteration needs better limits on corrections\r\n  while (Math.abs(tem5) >= 1.0e-12 && ktr <= 10) {\r\n    sineo1 = Math.sin(eo1);\r\n    coseo1 = Math.cos(eo1);\r\n    tem5 = 1.0 - coseo1 * axnl - sineo1 * aynl;\r\n    tem5 = (u - aynl * coseo1 + axnl * sineo1 - eo1) / tem5;\r\n    if (Math.abs(tem5) >= 0.95) {\r\n      if (tem5 > 0.0) {\r\n        tem5 = 0.95;\r\n      } else {\r\n        tem5 = -0.95;\r\n      }\r\n    }\r\n    eo1 += tem5;\r\n    ktr += 1;\r\n  }\r\n\r\n  //  ------------- short period preliminary quantities -----------\r\n  var ecose = axnl * coseo1 + aynl * sineo1;\r\n  var esine = axnl * sineo1 - aynl * coseo1;\r\n  var el2 = axnl * axnl + aynl * aynl;\r\n  var pl = am * (1.0 - el2);\r\n  if (pl < 0.0) {\r\n    //  printf(\"// error pl %f\\n\", pl);\r\n    satrec.error = 4;\r\n    //  sgp4fix add return\r\n    return [false, false];\r\n  }\r\n  var rl = am * (1.0 - ecose);\r\n  var rdotl = Math.sqrt(am) * esine / rl;\r\n  var rvdotl = Math.sqrt(pl) / rl;\r\n  var betal = Math.sqrt(1.0 - el2);\r\n  temp = esine / (1.0 + betal);\r\n  var sinu = am / rl * (sineo1 - aynl - axnl * temp);\r\n  var cosu = am / rl * (coseo1 - axnl + aynl * temp);\r\n  su = Math.atan2(sinu, cosu);\r\n  var sin2u = (cosu + cosu) * sinu;\r\n  var cos2u = 1.0 - 2.0 * sinu * sinu;\r\n  temp = 1.0 / pl;\r\n  var temp1 = 0.5 * j2 * temp;\r\n  var temp2 = temp1 * temp;\r\n\r\n  // -------------- update for short period periodics ------------\r\n  if (satrec.method === 'd') {\r\n    cosisq = cosip * cosip;\r\n    satrec.con41 = 3.0 * cosisq - 1.0;\r\n    satrec.x1mth2 = 1.0 - cosisq;\r\n    satrec.x7thm1 = 7.0 * cosisq - 1.0;\r\n  }\r\n  var mrt = rl * (1.0 - 1.5 * temp2 * betal * satrec.con41) + 0.5 * temp1 * satrec.x1mth2 * cos2u;\r\n\r\n  // sgp4fix for decaying satellites\r\n  if (mrt < 1.0) {\r\n    // printf(\"// decay condition %11.6f \\n\",mrt);\r\n    satrec.error = 6;\r\n    return {\r\n      position: false,\r\n      velocity: false\r\n    };\r\n  }\r\n  su -= 0.25 * temp2 * satrec.x7thm1 * sin2u;\r\n  var xnode = nodep + 1.5 * temp2 * cosip * sin2u;\r\n  var xinc = xincp + 1.5 * temp2 * cosip * sinip * cos2u;\r\n  var mvt = rdotl - nm * temp1 * satrec.x1mth2 * sin2u / xke;\r\n  var rvdot = rvdotl + nm * temp1 * (satrec.x1mth2 * cos2u + 1.5 * satrec.con41) / xke;\r\n\r\n  // --------------------- orientation vectors -------------------\r\n  var sinsu = Math.sin(su);\r\n  var cossu = Math.cos(su);\r\n  var snod = Math.sin(xnode);\r\n  var cnod = Math.cos(xnode);\r\n  var sini = Math.sin(xinc);\r\n  var cosi = Math.cos(xinc);\r\n  var xmx = -snod * cosi;\r\n  var xmy = cnod * cosi;\r\n  var ux = xmx * sinsu + cnod * cossu;\r\n  var uy = xmy * sinsu + snod * cossu;\r\n  var uz = sini * sinsu;\r\n  var vx = xmx * cossu - cnod * sinsu;\r\n  var vy = xmy * cossu - snod * sinsu;\r\n  var vz = sini * cossu;\r\n\r\n  // --------- position and velocity (in km and km/sec) ----------\r\n  var r = {\r\n    x: mrt * ux * earthRadius,\r\n    y: mrt * uy * earthRadius,\r\n    z: mrt * uz * earthRadius\r\n  };\r\n  var v = {\r\n    x: (mvt * ux + rvdot * vx) * vkmpersec,\r\n    y: (mvt * uy + rvdot * vy) * vkmpersec,\r\n    z: (mvt * uz + rvdot * vz) * vkmpersec\r\n  };\r\n  return {\r\n    position: r,\r\n    velocity: v\r\n  };\r\n\r\n  /* eslint-enable no-param-reassign */\r\n}\r\n\r\n/*-----------------------------------------------------------------------------\r\n *\r\n *                             procedure sgp4init\r\n *\r\n *  this procedure initializes variables for sgp4.\r\n *\r\n *  author        : david vallado                  719-573-2600   28 jun 2005\r\n *  author        : david vallado                  719-573-2600   28 jun 2005\r\n *\r\n *  inputs        :\r\n *    opsmode     - mode of operation afspc or improved 'a', 'i'\r\n *    satn        - satellite number\r\n *    bstar       - sgp4 type drag coefficient              kg/m2er\r\n *    ecco        - eccentricity\r\n *    epoch       - epoch time in days from jan 0, 1950. 0 hr\r\n *    argpo       - argument of perigee (output if ds)\r\n *    inclo       - inclination\r\n *    mo          - mean anomaly (output if ds)\r\n *    no          - mean motion\r\n *    nodeo       - right ascension of ascending node\r\n *\r\n *  outputs       :\r\n *    rec      - common values for subsequent calls\r\n *    return code - non-zero on error.\r\n *                   1 - mean elements, ecc >= 1.0 or ecc < -0.001 or a < 0.95 er\r\n *                   2 - mean motion less than 0.0\r\n *                   3 - pert elements, ecc < 0.0  or  ecc > 1.0\r\n *                   4 - semi-latus rectum < 0.0\r\n *                   5 - epoch elements are sub-orbital\r\n *                   6 - satellite has decayed\r\n *\r\n *  locals        :\r\n *    cnodm  , snodm  , cosim  , sinim  , cosomm , sinomm\r\n *    cc1sq  , cc2    , cc3\r\n *    coef   , coef1\r\n *    cosio4      -\r\n *    day         -\r\n *    dndt        -\r\n *    em          - eccentricity\r\n *    emsq        - eccentricity squared\r\n *    eeta        -\r\n *    etasq       -\r\n *    gam         -\r\n *    argpm       - argument of perigee\r\n *    nodem       -\r\n *    inclm       - inclination\r\n *    mm          - mean anomaly\r\n *    nm          - mean motion\r\n *    perige      - perigee\r\n *    pinvsq      -\r\n *    psisq       -\r\n *    qzms24      -\r\n *    rtemsq      -\r\n *    s1, s2, s3, s4, s5, s6, s7          -\r\n *    sfour       -\r\n *    ss1, ss2, ss3, ss4, ss5, ss6, ss7         -\r\n *    sz1, sz2, sz3\r\n *    sz11, sz12, sz13, sz21, sz22, sz23, sz31, sz32, sz33        -\r\n *    tc          -\r\n *    temp        -\r\n *    temp1, temp2, temp3       -\r\n *    tsi         -\r\n *    xpidot      -\r\n *    xhdot1      -\r\n *    z1, z2, z3          -\r\n *    z11, z12, z13, z21, z22, z23, z31, z32, z33         -\r\n *\r\n *  coupling      :\r\n *    getgravconst-\r\n *    initl       -\r\n *    dscom       -\r\n *    dpper       -\r\n *    dsinit      -\r\n *    sgp4        -\r\n *\r\n *  references    :\r\n *    hoots, roehrich, norad spacetrack report #3 1980\r\n *    hoots, norad spacetrack report #6 1986\r\n *    hoots, schumacher and glover 2004\r\n *    vallado, crawford, hujsak, kelso  2006\r\n ----------------------------------------------------------------------------*/\r\nfunction sgp4init(satrec, options) {\r\n  /* eslint-disable no-param-reassign */\r\n\r\n  var opsmode = options.opsmode,\r\n    satn = options.satn,\r\n    epoch = options.epoch,\r\n    xbstar = options.xbstar,\r\n    xecco = options.xecco,\r\n    xargpo = options.xargpo,\r\n    xinclo = options.xinclo,\r\n    xmo = options.xmo,\r\n    xno = options.xno,\r\n    xnodeo = options.xnodeo;\r\n  var cosim;\r\n  var sinim;\r\n  var cc1sq;\r\n  var cc2;\r\n  var cc3;\r\n  var coef;\r\n  var coef1;\r\n  var cosio4;\r\n  var em;\r\n  var emsq;\r\n  var eeta;\r\n  var etasq;\r\n  var argpm;\r\n  var nodem;\r\n  var inclm;\r\n  var mm;\r\n  var nm;\r\n  var perige;\r\n  var pinvsq;\r\n  var psisq;\r\n  var qzms24;\r\n  var s1;\r\n  var s2;\r\n  var s3;\r\n  var s4;\r\n  var s5;\r\n  var sfour;\r\n  var ss1;\r\n  var ss2;\r\n  var ss3;\r\n  var ss4;\r\n  var ss5;\r\n  var sz1;\r\n  var sz3;\r\n  var sz11;\r\n  var sz13;\r\n  var sz21;\r\n  var sz23;\r\n  var sz31;\r\n  var sz33;\r\n  var tc;\r\n  var temp;\r\n  var temp1;\r\n  var temp2;\r\n  var temp3;\r\n  var tsi;\r\n  var xpidot;\r\n  var xhdot1;\r\n  var z1;\r\n  var z3;\r\n  var z11;\r\n  var z13;\r\n  var z21;\r\n  var z23;\r\n  var z31;\r\n  var z33;\r\n\r\n  /* ------------------------ initialization --------------------- */\r\n  // sgp4fix divisor for divide by zero check on inclination\r\n  // the old check used 1.0 + Math.cos(pi-1.0e-9), but then compared it to\r\n  // 1.5 e-12, so the threshold was changed to 1.5e-12 for consistency\r\n  var temp4 = 1.5e-12;\r\n\r\n  // ----------- set all near earth variables to zero ------------\r\n  satrec.isimp = 0;\r\n  satrec.method = 'n';\r\n  satrec.aycof = 0.0;\r\n  satrec.con41 = 0.0;\r\n  satrec.cc1 = 0.0;\r\n  satrec.cc4 = 0.0;\r\n  satrec.cc5 = 0.0;\r\n  satrec.d2 = 0.0;\r\n  satrec.d3 = 0.0;\r\n  satrec.d4 = 0.0;\r\n  satrec.delmo = 0.0;\r\n  satrec.eta = 0.0;\r\n  satrec.argpdot = 0.0;\r\n  satrec.omgcof = 0.0;\r\n  satrec.sinmao = 0.0;\r\n  satrec.t = 0.0;\r\n  satrec.t2cof = 0.0;\r\n  satrec.t3cof = 0.0;\r\n  satrec.t4cof = 0.0;\r\n  satrec.t5cof = 0.0;\r\n  satrec.x1mth2 = 0.0;\r\n  satrec.x7thm1 = 0.0;\r\n  satrec.mdot = 0.0;\r\n  satrec.nodedot = 0.0;\r\n  satrec.xlcof = 0.0;\r\n  satrec.xmcof = 0.0;\r\n  satrec.nodecf = 0.0;\r\n\r\n  // ----------- set all deep space variables to zero ------------\r\n  satrec.irez = 0;\r\n  satrec.d2201 = 0.0;\r\n  satrec.d2211 = 0.0;\r\n  satrec.d3210 = 0.0;\r\n  satrec.d3222 = 0.0;\r\n  satrec.d4410 = 0.0;\r\n  satrec.d4422 = 0.0;\r\n  satrec.d5220 = 0.0;\r\n  satrec.d5232 = 0.0;\r\n  satrec.d5421 = 0.0;\r\n  satrec.d5433 = 0.0;\r\n  satrec.dedt = 0.0;\r\n  satrec.del1 = 0.0;\r\n  satrec.del2 = 0.0;\r\n  satrec.del3 = 0.0;\r\n  satrec.didt = 0.0;\r\n  satrec.dmdt = 0.0;\r\n  satrec.dnodt = 0.0;\r\n  satrec.domdt = 0.0;\r\n  satrec.e3 = 0.0;\r\n  satrec.ee2 = 0.0;\r\n  satrec.peo = 0.0;\r\n  satrec.pgho = 0.0;\r\n  satrec.pho = 0.0;\r\n  satrec.pinco = 0.0;\r\n  satrec.plo = 0.0;\r\n  satrec.se2 = 0.0;\r\n  satrec.se3 = 0.0;\r\n  satrec.sgh2 = 0.0;\r\n  satrec.sgh3 = 0.0;\r\n  satrec.sgh4 = 0.0;\r\n  satrec.sh2 = 0.0;\r\n  satrec.sh3 = 0.0;\r\n  satrec.si2 = 0.0;\r\n  satrec.si3 = 0.0;\r\n  satrec.sl2 = 0.0;\r\n  satrec.sl3 = 0.0;\r\n  satrec.sl4 = 0.0;\r\n  satrec.gsto = 0.0;\r\n  satrec.xfact = 0.0;\r\n  satrec.xgh2 = 0.0;\r\n  satrec.xgh3 = 0.0;\r\n  satrec.xgh4 = 0.0;\r\n  satrec.xh2 = 0.0;\r\n  satrec.xh3 = 0.0;\r\n  satrec.xi2 = 0.0;\r\n  satrec.xi3 = 0.0;\r\n  satrec.xl2 = 0.0;\r\n  satrec.xl3 = 0.0;\r\n  satrec.xl4 = 0.0;\r\n  satrec.xlamo = 0.0;\r\n  satrec.zmol = 0.0;\r\n  satrec.zmos = 0.0;\r\n  satrec.atime = 0.0;\r\n  satrec.xli = 0.0;\r\n  satrec.xni = 0.0;\r\n\r\n  // sgp4fix - note the following variables are also passed directly via satrec.\r\n  // it is possible to streamline the sgp4init call by deleting the \"x\"\r\n  // variables, but the user would need to set the satrec.* values first. we\r\n  // include the additional assignments in case twoline2rv is not used.\r\n\r\n  satrec.bstar = xbstar;\r\n  satrec.ecco = xecco;\r\n  satrec.argpo = xargpo;\r\n  satrec.inclo = xinclo;\r\n  satrec.mo = xmo;\r\n  satrec.no = xno;\r\n  satrec.nodeo = xnodeo;\r\n\r\n  //  sgp4fix add opsmode\r\n  satrec.operationmode = opsmode;\r\n\r\n  // ------------------------ earth constants -----------------------\r\n  // sgp4fix identify constants and allow alternate values\r\n\r\n  var ss = 78.0 / earthRadius + 1.0;\r\n  // sgp4fix use multiply for speed instead of pow\r\n  var qzms2ttemp = (120.0 - 78.0) / earthRadius;\r\n  var qzms2t = qzms2ttemp * qzms2ttemp * qzms2ttemp * qzms2ttemp;\r\n  satrec.init = 'y';\r\n  satrec.t = 0.0;\r\n  var initlOptions = {\r\n    satn: satn,\r\n    ecco: satrec.ecco,\r\n    epoch: epoch,\r\n    inclo: satrec.inclo,\r\n    no: satrec.no,\r\n    method: satrec.method,\r\n    opsmode: satrec.operationmode\r\n  };\r\n  var initlResult = initl(initlOptions);\r\n  var ao = initlResult.ao,\r\n    con42 = initlResult.con42,\r\n    cosio = initlResult.cosio,\r\n    cosio2 = initlResult.cosio2,\r\n    eccsq = initlResult.eccsq,\r\n    omeosq = initlResult.omeosq,\r\n    posq = initlResult.posq,\r\n    rp = initlResult.rp,\r\n    rteosq = initlResult.rteosq,\r\n    sinio = initlResult.sinio;\r\n  satrec.no = initlResult.no;\r\n  satrec.con41 = initlResult.con41;\r\n  satrec.gsto = initlResult.gsto;\r\n  satrec.a = Math.pow(satrec.no * tumin, -2.0 / 3.0);\r\n  satrec.alta = satrec.a * (1.0 + satrec.ecco) - 1.0;\r\n  satrec.altp = satrec.a * (1.0 - satrec.ecco) - 1.0;\r\n  satrec.error = 0;\r\n\r\n  // sgp4fix remove this check as it is unnecessary\r\n  // the mrt check in sgp4 handles decaying satellite cases even if the starting\r\n  // condition is below the surface of te earth\r\n  // if (rp < 1.0)\r\n  // {\r\n  //   printf(\"// *** satn%d epoch elts sub-orbital ***\\n\", satn);\r\n  //   satrec.error = 5;\r\n  // }\r\n\r\n  if (omeosq >= 0.0 || satrec.no >= 0.0) {\r\n    satrec.isimp = 0;\r\n    if (rp < 220.0 / earthRadius + 1.0) {\r\n      satrec.isimp = 1;\r\n    }\r\n    sfour = ss;\r\n    qzms24 = qzms2t;\r\n    perige = (rp - 1.0) * earthRadius;\r\n\r\n    // - for perigees below 156 km, s and qoms2t are altered -\r\n    if (perige < 156.0) {\r\n      sfour = perige - 78.0;\r\n      if (perige < 98.0) {\r\n        sfour = 20.0;\r\n      }\r\n\r\n      // sgp4fix use multiply for speed instead of pow\r\n      var qzms24temp = (120.0 - sfour) / earthRadius;\r\n      qzms24 = qzms24temp * qzms24temp * qzms24temp * qzms24temp;\r\n      sfour = sfour / earthRadius + 1.0;\r\n    }\r\n    pinvsq = 1.0 / posq;\r\n    tsi = 1.0 / (ao - sfour);\r\n    satrec.eta = ao * satrec.ecco * tsi;\r\n    etasq = satrec.eta * satrec.eta;\r\n    eeta = satrec.ecco * satrec.eta;\r\n    psisq = Math.abs(1.0 - etasq);\r\n    coef = qzms24 * Math.pow(tsi, 4.0);\r\n    coef1 = coef / Math.pow(psisq, 3.5);\r\n    cc2 = coef1 * satrec.no * (ao * (1.0 + 1.5 * etasq + eeta * (4.0 + etasq)) + 0.375 * j2 * tsi / psisq * satrec.con41 * (8.0 + 3.0 * etasq * (8.0 + etasq)));\r\n    satrec.cc1 = satrec.bstar * cc2;\r\n    cc3 = 0.0;\r\n    if (satrec.ecco > 1.0e-4) {\r\n      cc3 = -2.0 * coef * tsi * j3oj2 * satrec.no * sinio / satrec.ecco;\r\n    }\r\n    satrec.x1mth2 = 1.0 - cosio2;\r\n    satrec.cc4 = 2.0 * satrec.no * coef1 * ao * omeosq * (satrec.eta * (2.0 + 0.5 * etasq) + satrec.ecco * (0.5 + 2.0 * etasq) - j2 * tsi / (ao * psisq) * (-3.0 * satrec.con41 * (1.0 - 2.0 * eeta + etasq * (1.5 - 0.5 * eeta)) + 0.75 * satrec.x1mth2 * (2.0 * etasq - eeta * (1.0 + etasq)) * Math.cos(2.0 * satrec.argpo)));\r\n    satrec.cc5 = 2.0 * coef1 * ao * omeosq * (1.0 + 2.75 * (etasq + eeta) + eeta * etasq);\r\n    cosio4 = cosio2 * cosio2;\r\n    temp1 = 1.5 * j2 * pinvsq * satrec.no;\r\n    temp2 = 0.5 * temp1 * j2 * pinvsq;\r\n    temp3 = -0.46875 * j4 * pinvsq * pinvsq * satrec.no;\r\n    satrec.mdot = satrec.no + 0.5 * temp1 * rteosq * satrec.con41 + 0.0625 * temp2 * rteosq * (13.0 - 78.0 * cosio2 + 137.0 * cosio4);\r\n    satrec.argpdot = -0.5 * temp1 * con42 + 0.0625 * temp2 * (7.0 - 114.0 * cosio2 + 395.0 * cosio4) + temp3 * (3.0 - 36.0 * cosio2 + 49.0 * cosio4);\r\n    xhdot1 = -temp1 * cosio;\r\n    satrec.nodedot = xhdot1 + (0.5 * temp2 * (4.0 - 19.0 * cosio2) + 2.0 * temp3 * (3.0 - 7.0 * cosio2)) * cosio;\r\n    xpidot = satrec.argpdot + satrec.nodedot;\r\n    satrec.omgcof = satrec.bstar * cc3 * Math.cos(satrec.argpo);\r\n    satrec.xmcof = 0.0;\r\n    if (satrec.ecco > 1.0e-4) {\r\n      satrec.xmcof = -x2o3 * coef * satrec.bstar / eeta;\r\n    }\r\n    satrec.nodecf = 3.5 * omeosq * xhdot1 * satrec.cc1;\r\n    satrec.t2cof = 1.5 * satrec.cc1;\r\n\r\n    // sgp4fix for divide by zero with xinco = 180 deg\r\n    if (Math.abs(cosio + 1.0) > 1.5e-12) {\r\n      satrec.xlcof = -0.25 * j3oj2 * sinio * (3.0 + 5.0 * cosio) / (1.0 + cosio);\r\n    } else {\r\n      satrec.xlcof = -0.25 * j3oj2 * sinio * (3.0 + 5.0 * cosio) / temp4;\r\n    }\r\n    satrec.aycof = -0.5 * j3oj2 * sinio;\r\n\r\n    // sgp4fix use multiply for speed instead of pow\r\n    var delmotemp = 1.0 + satrec.eta * Math.cos(satrec.mo);\r\n    satrec.delmo = delmotemp * delmotemp * delmotemp;\r\n    satrec.sinmao = Math.sin(satrec.mo);\r\n    satrec.x7thm1 = 7.0 * cosio2 - 1.0;\r\n\r\n    // --------------- deep space initialization -------------\r\n    if (2 * pi / satrec.no >= 225.0) {\r\n      satrec.method = 'd';\r\n      satrec.isimp = 1;\r\n      tc = 0.0;\r\n      inclm = satrec.inclo;\r\n      var dscomOptions = {\r\n        epoch: epoch,\r\n        ep: satrec.ecco,\r\n        argpp: satrec.argpo,\r\n        tc: tc,\r\n        inclp: satrec.inclo,\r\n        nodep: satrec.nodeo,\r\n        np: satrec.no,\r\n        e3: satrec.e3,\r\n        ee2: satrec.ee2,\r\n        peo: satrec.peo,\r\n        pgho: satrec.pgho,\r\n        pho: satrec.pho,\r\n        pinco: satrec.pinco,\r\n        plo: satrec.plo,\r\n        se2: satrec.se2,\r\n        se3: satrec.se3,\r\n        sgh2: satrec.sgh2,\r\n        sgh3: satrec.sgh3,\r\n        sgh4: satrec.sgh4,\r\n        sh2: satrec.sh2,\r\n        sh3: satrec.sh3,\r\n        si2: satrec.si2,\r\n        si3: satrec.si3,\r\n        sl2: satrec.sl2,\r\n        sl3: satrec.sl3,\r\n        sl4: satrec.sl4,\r\n        xgh2: satrec.xgh2,\r\n        xgh3: satrec.xgh3,\r\n        xgh4: satrec.xgh4,\r\n        xh2: satrec.xh2,\r\n        xh3: satrec.xh3,\r\n        xi2: satrec.xi2,\r\n        xi3: satrec.xi3,\r\n        xl2: satrec.xl2,\r\n        xl3: satrec.xl3,\r\n        xl4: satrec.xl4,\r\n        zmol: satrec.zmol,\r\n        zmos: satrec.zmos\r\n      };\r\n      var dscomResult = dscom(dscomOptions);\r\n      satrec.e3 = dscomResult.e3;\r\n      satrec.ee2 = dscomResult.ee2;\r\n      satrec.peo = dscomResult.peo;\r\n      satrec.pgho = dscomResult.pgho;\r\n      satrec.pho = dscomResult.pho;\r\n      satrec.pinco = dscomResult.pinco;\r\n      satrec.plo = dscomResult.plo;\r\n      satrec.se2 = dscomResult.se2;\r\n      satrec.se3 = dscomResult.se3;\r\n      satrec.sgh2 = dscomResult.sgh2;\r\n      satrec.sgh3 = dscomResult.sgh3;\r\n      satrec.sgh4 = dscomResult.sgh4;\r\n      satrec.sh2 = dscomResult.sh2;\r\n      satrec.sh3 = dscomResult.sh3;\r\n      satrec.si2 = dscomResult.si2;\r\n      satrec.si3 = dscomResult.si3;\r\n      satrec.sl2 = dscomResult.sl2;\r\n      satrec.sl3 = dscomResult.sl3;\r\n      satrec.sl4 = dscomResult.sl4;\r\n      sinim = dscomResult.sinim;\r\n      cosim = dscomResult.cosim;\r\n      em = dscomResult.em;\r\n      emsq = dscomResult.emsq;\r\n      s1 = dscomResult.s1;\r\n      s2 = dscomResult.s2;\r\n      s3 = dscomResult.s3;\r\n      s4 = dscomResult.s4;\r\n      s5 = dscomResult.s5;\r\n      ss1 = dscomResult.ss1;\r\n      ss2 = dscomResult.ss2;\r\n      ss3 = dscomResult.ss3;\r\n      ss4 = dscomResult.ss4;\r\n      ss5 = dscomResult.ss5;\r\n      sz1 = dscomResult.sz1;\r\n      sz3 = dscomResult.sz3;\r\n      sz11 = dscomResult.sz11;\r\n      sz13 = dscomResult.sz13;\r\n      sz21 = dscomResult.sz21;\r\n      sz23 = dscomResult.sz23;\r\n      sz31 = dscomResult.sz31;\r\n      sz33 = dscomResult.sz33;\r\n      satrec.xgh2 = dscomResult.xgh2;\r\n      satrec.xgh3 = dscomResult.xgh3;\r\n      satrec.xgh4 = dscomResult.xgh4;\r\n      satrec.xh2 = dscomResult.xh2;\r\n      satrec.xh3 = dscomResult.xh3;\r\n      satrec.xi2 = dscomResult.xi2;\r\n      satrec.xi3 = dscomResult.xi3;\r\n      satrec.xl2 = dscomResult.xl2;\r\n      satrec.xl3 = dscomResult.xl3;\r\n      satrec.xl4 = dscomResult.xl4;\r\n      satrec.zmol = dscomResult.zmol;\r\n      satrec.zmos = dscomResult.zmos;\r\n      nm = dscomResult.nm;\r\n      z1 = dscomResult.z1;\r\n      z3 = dscomResult.z3;\r\n      z11 = dscomResult.z11;\r\n      z13 = dscomResult.z13;\r\n      z21 = dscomResult.z21;\r\n      z23 = dscomResult.z23;\r\n      z31 = dscomResult.z31;\r\n      z33 = dscomResult.z33;\r\n      var dpperOptions = {\r\n        inclo: inclm,\r\n        init: satrec.init,\r\n        ep: satrec.ecco,\r\n        inclp: satrec.inclo,\r\n        nodep: satrec.nodeo,\r\n        argpp: satrec.argpo,\r\n        mp: satrec.mo,\r\n        opsmode: satrec.operationmode\r\n      };\r\n      var dpperResult = dpper(satrec, dpperOptions);\r\n      satrec.ecco = dpperResult.ep;\r\n      satrec.inclo = dpperResult.inclp;\r\n      satrec.nodeo = dpperResult.nodep;\r\n      satrec.argpo = dpperResult.argpp;\r\n      satrec.mo = dpperResult.mp;\r\n      argpm = 0.0;\r\n      nodem = 0.0;\r\n      mm = 0.0;\r\n      var dsinitOptions = {\r\n        cosim: cosim,\r\n        emsq: emsq,\r\n        argpo: satrec.argpo,\r\n        s1: s1,\r\n        s2: s2,\r\n        s3: s3,\r\n        s4: s4,\r\n        s5: s5,\r\n        sinim: sinim,\r\n        ss1: ss1,\r\n        ss2: ss2,\r\n        ss3: ss3,\r\n        ss4: ss4,\r\n        ss5: ss5,\r\n        sz1: sz1,\r\n        sz3: sz3,\r\n        sz11: sz11,\r\n        sz13: sz13,\r\n        sz21: sz21,\r\n        sz23: sz23,\r\n        sz31: sz31,\r\n        sz33: sz33,\r\n        t: satrec.t,\r\n        tc: tc,\r\n        gsto: satrec.gsto,\r\n        mo: satrec.mo,\r\n        mdot: satrec.mdot,\r\n        no: satrec.no,\r\n        nodeo: satrec.nodeo,\r\n        nodedot: satrec.nodedot,\r\n        xpidot: xpidot,\r\n        z1: z1,\r\n        z3: z3,\r\n        z11: z11,\r\n        z13: z13,\r\n        z21: z21,\r\n        z23: z23,\r\n        z31: z31,\r\n        z33: z33,\r\n        ecco: satrec.ecco,\r\n        eccsq: eccsq,\r\n        em: em,\r\n        argpm: argpm,\r\n        inclm: inclm,\r\n        mm: mm,\r\n        nm: nm,\r\n        nodem: nodem,\r\n        irez: satrec.irez,\r\n        atime: satrec.atime,\r\n        d2201: satrec.d2201,\r\n        d2211: satrec.d2211,\r\n        d3210: satrec.d3210,\r\n        d3222: satrec.d3222,\r\n        d4410: satrec.d4410,\r\n        d4422: satrec.d4422,\r\n        d5220: satrec.d5220,\r\n        d5232: satrec.d5232,\r\n        d5421: satrec.d5421,\r\n        d5433: satrec.d5433,\r\n        dedt: satrec.dedt,\r\n        didt: satrec.didt,\r\n        dmdt: satrec.dmdt,\r\n        dnodt: satrec.dnodt,\r\n        domdt: satrec.domdt,\r\n        del1: satrec.del1,\r\n        del2: satrec.del2,\r\n        del3: satrec.del3,\r\n        xfact: satrec.xfact,\r\n        xlamo: satrec.xlamo,\r\n        xli: satrec.xli,\r\n        xni: satrec.xni\r\n      };\r\n      var dsinitResult = dsinit(dsinitOptions);\r\n      satrec.irez = dsinitResult.irez;\r\n      satrec.atime = dsinitResult.atime;\r\n      satrec.d2201 = dsinitResult.d2201;\r\n      satrec.d2211 = dsinitResult.d2211;\r\n      satrec.d3210 = dsinitResult.d3210;\r\n      satrec.d3222 = dsinitResult.d3222;\r\n      satrec.d4410 = dsinitResult.d4410;\r\n      satrec.d4422 = dsinitResult.d4422;\r\n      satrec.d5220 = dsinitResult.d5220;\r\n      satrec.d5232 = dsinitResult.d5232;\r\n      satrec.d5421 = dsinitResult.d5421;\r\n      satrec.d5433 = dsinitResult.d5433;\r\n      satrec.dedt = dsinitResult.dedt;\r\n      satrec.didt = dsinitResult.didt;\r\n      satrec.dmdt = dsinitResult.dmdt;\r\n      satrec.dnodt = dsinitResult.dnodt;\r\n      satrec.domdt = dsinitResult.domdt;\r\n      satrec.del1 = dsinitResult.del1;\r\n      satrec.del2 = dsinitResult.del2;\r\n      satrec.del3 = dsinitResult.del3;\r\n      satrec.xfact = dsinitResult.xfact;\r\n      satrec.xlamo = dsinitResult.xlamo;\r\n      satrec.xli = dsinitResult.xli;\r\n      satrec.xni = dsinitResult.xni;\r\n    }\r\n\r\n    // ----------- set variables if not deep space -----------\r\n    if (satrec.isimp !== 1) {\r\n      cc1sq = satrec.cc1 * satrec.cc1;\r\n      satrec.d2 = 4.0 * ao * tsi * cc1sq;\r\n      temp = satrec.d2 * tsi * satrec.cc1 / 3.0;\r\n      satrec.d3 = (17.0 * ao + sfour) * temp;\r\n      satrec.d4 = 0.5 * temp * ao * tsi * (221.0 * ao + 31.0 * sfour) * satrec.cc1;\r\n      satrec.t3cof = satrec.d2 + 2.0 * cc1sq;\r\n      satrec.t4cof = 0.25 * (3.0 * satrec.d3 + satrec.cc1 * (12.0 * satrec.d2 + 10.0 * cc1sq));\r\n      satrec.t5cof = 0.2 * (3.0 * satrec.d4 + 12.0 * satrec.cc1 * satrec.d3 + 6.0 * satrec.d2 * satrec.d2 + 15.0 * cc1sq * (2.0 * satrec.d2 + cc1sq));\r\n    }\r\n\r\n    /* finally propogate to zero epoch to initialize all others. */\r\n    // sgp4fix take out check to let satellites process until they are actually below earth surface\r\n    // if(satrec.error == 0)\r\n  }\r\n\r\n  sgp4(satrec, 0);\r\n  satrec.init = 'n';\r\n\r\n  /* eslint-enable no-param-reassign */\r\n}\r\n\r\n/* -----------------------------------------------------------------------------\r\n *\r\n *                           function twoline2rv\r\n *\r\n *  this function converts the two line element set character string data to\r\n *    variables and initializes the sgp4 variables. several intermediate varaibles\r\n *    and quantities are determined. note that the result is a structure so multiple\r\n *    satellites can be processed simultaneously without having to reinitialize. the\r\n *    verification mode is an important option that permits quick checks of any\r\n *    changes to the underlying technical theory. this option works using a\r\n *    modified tle file in which the start, stop, and delta time values are\r\n *    included at the end of the second line of data. this only works with the\r\n *    verification mode. the catalog mode simply propagates from -1440 to 1440 min\r\n *    from epoch and is useful when performing entire catalog runs.\r\n *\r\n *  author        : david vallado                  719-573-2600    1 mar 2001\r\n *\r\n *  inputs        :\r\n *    longstr1    - first line of the tle\r\n *    longstr2    - second line of the tle\r\n *    typerun     - type of run                    verification 'v', catalog 'c',\r\n *                                                 manual 'm'\r\n *    typeinput   - type of manual input           mfe 'm', epoch 'e', dayofyr 'd'\r\n *    opsmode     - mode of operation afspc or improved 'a', 'i'\r\n *    whichconst  - which set of constants to use  72, 84\r\n *\r\n *  outputs       :\r\n *    satrec      - structure containing all the sgp4 satellite information\r\n *\r\n *  coupling      :\r\n *    getgravconst-\r\n *    days2mdhms  - conversion of days to month, day, hour, minute, second\r\n *    jday        - convert day month year hour minute second into julian date\r\n *    sgp4init    - initialize the sgp4 variables\r\n *\r\n *  references    :\r\n *    norad spacetrack report #3\r\n *    vallado, crawford, hujsak, kelso  2006\r\n --------------------------------------------------------------------------- */\r\n\r\n/**\r\n * Return a Satellite imported from two lines of TLE data.\r\n *\r\n * Provide the two TLE lines as strings `longstr1` and `longstr2`,\r\n * and select which standard set of gravitational constants you want\r\n * by providing `gravity_constants`:\r\n *\r\n * `sgp4.propagation.wgs72` - Standard WGS 72 model\r\n * `sgp4.propagation.wgs84` - More recent WGS 84 model\r\n * `sgp4.propagation.wgs72old` - Legacy support for old SGP4 behavior\r\n *\r\n * Normally, computations are made using letious recent improvements\r\n * to the algorithm.  If you want to turn some of these off and go\r\n * back into \"afspc\" mode, then set `afspc_mode` to `True`.\r\n */\r\nfunction twoline2satrec(longstr1, longstr2) {\r\n  var opsmode = 'i';\r\n  var xpdotp = 1440.0 / (2.0 * pi); // 229.1831180523293;\r\n  var year = 0;\r\n  var satrec = {};\r\n  satrec.error = 0;\r\n  satrec.satnum = longstr1.substring(2, 7);\r\n  satrec.epochyr = parseInt(longstr1.substring(18, 20), 10);\r\n  satrec.epochdays = parseFloat(longstr1.substring(20, 32));\r\n  satrec.ndot = parseFloat(longstr1.substring(33, 43));\r\n  satrec.nddot = parseFloat(\".\".concat(parseInt(longstr1.substring(44, 50), 10), \"E\").concat(longstr1.substring(50, 52)));\r\n  satrec.bstar = parseFloat(\"\".concat(longstr1.substring(53, 54), \".\").concat(parseInt(longstr1.substring(54, 59), 10), \"E\").concat(longstr1.substring(59, 61)));\r\n\r\n  // satrec.satnum = longstr2.substring(2, 7);\r\n  satrec.inclo = parseFloat(longstr2.substring(8, 16));\r\n  satrec.nodeo = parseFloat(longstr2.substring(17, 25));\r\n  satrec.ecco = parseFloat(\".\".concat(longstr2.substring(26, 33)));\r\n  satrec.argpo = parseFloat(longstr2.substring(34, 42));\r\n  satrec.mo = parseFloat(longstr2.substring(43, 51));\r\n  satrec.no = parseFloat(longstr2.substring(52, 63));\r\n\r\n  // ---- find no, ndot, nddot ----\r\n  satrec.no /= xpdotp; //   rad/min\r\n  // satrec.nddot= satrec.nddot * Math.pow(10.0, nexp);\r\n  // satrec.bstar= satrec.bstar * Math.pow(10.0, ibexp);\r\n\r\n  // ---- convert to sgp4 units ----\r\n  // satrec.ndot /= (xpdotp * 1440.0); // ? * minperday\r\n  // satrec.nddot /= (xpdotp * 1440.0 * 1440);\r\n\r\n  // ---- find standard orbital elements ----\r\n  satrec.inclo *= deg2rad;\r\n  satrec.nodeo *= deg2rad;\r\n  satrec.argpo *= deg2rad;\r\n  satrec.mo *= deg2rad;\r\n\r\n  // ----------------------------------------------------------------\r\n  // find sgp4epoch time of element set\r\n  // remember that sgp4 uses units of days from 0 jan 1950 (sgp4epoch)\r\n  // and minutes from the epoch (time)\r\n  // ----------------------------------------------------------------\r\n\r\n  // ---------------- temp fix for years from 1957-2056 -------------------\r\n  // --------- correct fix will occur when year is 4-digit in tle ---------\r\n\r\n  if (satrec.epochyr < 57) {\r\n    year = satrec.epochyr + 2000;\r\n  } else {\r\n    year = satrec.epochyr + 1900;\r\n  }\r\n  var mdhmsResult = days2mdhms(year, satrec.epochdays);\r\n  var mon = mdhmsResult.mon,\r\n    day = mdhmsResult.day,\r\n    hr = mdhmsResult.hr,\r\n    minute = mdhmsResult.minute,\r\n    sec = mdhmsResult.sec;\r\n  satrec.jdsatepoch = jday(year, mon, day, hr, minute, sec);\r\n\r\n  //  ---------------- initialize the orbit at sgp4epoch -------------------\r\n  sgp4init(satrec, {\r\n    opsmode: opsmode,\r\n    satn: satrec.satnum,\r\n    epoch: satrec.jdsatepoch - 2433281.5,\r\n    xbstar: satrec.bstar,\r\n    xecco: satrec.ecco,\r\n    xargpo: satrec.argpo,\r\n    xinclo: satrec.inclo,\r\n    xmo: satrec.mo,\r\n    xno: satrec.no,\r\n    xnodeo: satrec.nodeo\r\n  });\r\n  return satrec;\r\n}\r\n\r\nfunction _toConsumableArray(arr) {\r\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\r\n}\r\nfunction _arrayWithoutHoles(arr) {\r\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\r\n}\r\nfunction _iterableToArray(iter) {\r\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\r\n}\r\nfunction _unsupportedIterableToArray(o, minLen) {\r\n  if (!o) return;\r\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\r\n  var n = Object.prototype.toString.call(o).slice(8, -1);\r\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\r\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\r\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\r\n}\r\nfunction _arrayLikeToArray(arr, len) {\r\n  if (len == null || len > arr.length) len = arr.length;\r\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\r\n  return arr2;\r\n}\r\nfunction _nonIterableSpread() {\r\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\r\n}\r\n\r\nfunction propagate() {\r\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\r\n    args[_key] = arguments[_key];\r\n  }\r\n  // Return a position and velocity vector for a given date and time.\r\n  var satrec = args[0];\r\n  var date = Array.prototype.slice.call(args, 1);\r\n  var j = jday.apply(void 0, _toConsumableArray(date));\r\n  var m = (j - satrec.jdsatepoch) * minutesPerDay;\r\n  return sgp4(satrec, m);\r\n}\r\n\r\nfunction dopplerFactor(location, position, velocity) {\r\n  var mfactor = 7.292115E-5;\r\n  var c = 299792.458; // Speed of light in km/s\r\n\r\n  var range = {\r\n    x: position.x - location.x,\r\n    y: position.y - location.y,\r\n    z: position.z - location.z\r\n  };\r\n  range.w = Math.sqrt(Math.pow(range.x, 2) + Math.pow(range.y, 2) + Math.pow(range.z, 2));\r\n  var rangeVel = {\r\n    x: velocity.x + mfactor * location.y,\r\n    y: velocity.y - mfactor * location.x,\r\n    z: velocity.z\r\n  };\r\n  function sign(value) {\r\n    return value >= 0 ? 1 : -1;\r\n  }\r\n  var rangeRate = (range.x * rangeVel.x + range.y * rangeVel.y + range.z * rangeVel.z) / range.w;\r\n  return 1 + rangeRate / c * sign(rangeRate);\r\n}\r\n\r\nfunction radiansToDegrees(radians) {\r\n  return radians * rad2deg;\r\n}\r\nfunction degreesToRadians(degrees) {\r\n  return degrees * deg2rad;\r\n}\r\nfunction degreesLat(radians) {\r\n  if (radians < -pi / 2 || radians > pi / 2) {\r\n    throw new RangeError('Latitude radians must be in range [-pi/2; pi/2].');\r\n  }\r\n  return radiansToDegrees(radians);\r\n}\r\nfunction degreesLong(radians) {\r\n  if (radians < -pi || radians > pi) {\r\n    throw new RangeError('Longitude radians must be in range [-pi; pi].');\r\n  }\r\n  return radiansToDegrees(radians);\r\n}\r\nfunction radiansLat(degrees) {\r\n  if (degrees < -90 || degrees > 90) {\r\n    throw new RangeError('Latitude degrees must be in range [-90; 90].');\r\n  }\r\n  return degreesToRadians(degrees);\r\n}\r\nfunction radiansLong(degrees) {\r\n  if (degrees < -180 || degrees > 180) {\r\n    throw new RangeError('Longitude degrees must be in range [-180; 180].');\r\n  }\r\n  return degreesToRadians(degrees);\r\n}\r\nfunction geodeticToEcf(geodetic) {\r\n  var longitude = geodetic.longitude,\r\n    latitude = geodetic.latitude,\r\n    height = geodetic.height;\r\n  var a = 6378.137;\r\n  var b = 6356.7523142;\r\n  var f = (a - b) / a;\r\n  var e2 = 2 * f - f * f;\r\n  var normal = a / Math.sqrt(1 - e2 * (Math.sin(latitude) * Math.sin(latitude)));\r\n  var x = (normal + height) * Math.cos(latitude) * Math.cos(longitude);\r\n  var y = (normal + height) * Math.cos(latitude) * Math.sin(longitude);\r\n  var z = (normal * (1 - e2) + height) * Math.sin(latitude);\r\n  return {\r\n    x: x,\r\n    y: y,\r\n    z: z\r\n  };\r\n}\r\nfunction eciToGeodetic(eci, gmst) {\r\n  // http://www.celestrak.com/columns/v02n03/\r\n  var a = 6378.137;\r\n  var b = 6356.7523142;\r\n  var R = Math.sqrt(eci.x * eci.x + eci.y * eci.y);\r\n  var f = (a - b) / a;\r\n  var e2 = 2 * f - f * f;\r\n  var longitude = Math.atan2(eci.y, eci.x) - gmst;\r\n  while (longitude < -pi) {\r\n    longitude += twoPi;\r\n  }\r\n  while (longitude > pi) {\r\n    longitude -= twoPi;\r\n  }\r\n  var kmax = 20;\r\n  var k = 0;\r\n  var latitude = Math.atan2(eci.z, Math.sqrt(eci.x * eci.x + eci.y * eci.y));\r\n  var C;\r\n  while (k < kmax) {\r\n    C = 1 / Math.sqrt(1 - e2 * (Math.sin(latitude) * Math.sin(latitude)));\r\n    latitude = Math.atan2(eci.z + a * C * e2 * Math.sin(latitude), R);\r\n    k += 1;\r\n  }\r\n  var height = R / Math.cos(latitude) - a * C;\r\n  return {\r\n    longitude: longitude,\r\n    latitude: latitude,\r\n    height: height\r\n  };\r\n}\r\nfunction ecfToEci(ecf, gmst) {\r\n  // ccar.colorado.edu/ASEN5070/handouts/coordsys.doc\r\n  //\r\n  // [X]     [C -S  0][X]\r\n  // [Y]  =  [S  C  0][Y]\r\n  // [Z]eci  [0  0  1][Z]ecf\r\n  //\r\n  var X = ecf.x * Math.cos(gmst) - ecf.y * Math.sin(gmst);\r\n  var Y = ecf.x * Math.sin(gmst) + ecf.y * Math.cos(gmst);\r\n  var Z = ecf.z;\r\n  return {\r\n    x: X,\r\n    y: Y,\r\n    z: Z\r\n  };\r\n}\r\nfunction eciToEcf(eci, gmst) {\r\n  // ccar.colorado.edu/ASEN5070/handouts/coordsys.doc\r\n  //\r\n  // [X]     [C -S  0][X]\r\n  // [Y]  =  [S  C  0][Y]\r\n  // [Z]eci  [0  0  1][Z]ecf\r\n  //\r\n  //\r\n  // Inverse:\r\n  // [X]     [C  S  0][X]\r\n  // [Y]  =  [-S C  0][Y]\r\n  // [Z]ecf  [0  0  1][Z]eci\r\n\r\n  var x = eci.x * Math.cos(gmst) + eci.y * Math.sin(gmst);\r\n  var y = eci.x * -Math.sin(gmst) + eci.y * Math.cos(gmst);\r\n  var z = eci.z;\r\n  return {\r\n    x: x,\r\n    y: y,\r\n    z: z\r\n  };\r\n}\r\nfunction topocentric(observerGeodetic, satelliteEcf) {\r\n  // http://www.celestrak.com/columns/v02n02/\r\n  // TS Kelso's method, except I'm using ECF frame\r\n  // and he uses ECI.\r\n\r\n  var longitude = observerGeodetic.longitude,\r\n    latitude = observerGeodetic.latitude;\r\n  var observerEcf = geodeticToEcf(observerGeodetic);\r\n  var rx = satelliteEcf.x - observerEcf.x;\r\n  var ry = satelliteEcf.y - observerEcf.y;\r\n  var rz = satelliteEcf.z - observerEcf.z;\r\n  var topS = Math.sin(latitude) * Math.cos(longitude) * rx + Math.sin(latitude) * Math.sin(longitude) * ry - Math.cos(latitude) * rz;\r\n  var topE = -Math.sin(longitude) * rx + Math.cos(longitude) * ry;\r\n  var topZ = Math.cos(latitude) * Math.cos(longitude) * rx + Math.cos(latitude) * Math.sin(longitude) * ry + Math.sin(latitude) * rz;\r\n  return {\r\n    topS: topS,\r\n    topE: topE,\r\n    topZ: topZ\r\n  };\r\n}\r\n\r\n/**\r\n * @param {Object} tc\r\n * @param {Number} tc.topS Positive horizontal vector S due south.\r\n * @param {Number} tc.topE Positive horizontal vector E due east.\r\n * @param {Number} tc.topZ Vector Z normal to the surface of the earth (up).\r\n * @returns {Object}\r\n */\r\nfunction topocentricToLookAngles(tc) {\r\n  var topS = tc.topS,\r\n    topE = tc.topE,\r\n    topZ = tc.topZ;\r\n  var rangeSat = Math.sqrt(topS * topS + topE * topE + topZ * topZ);\r\n  var El = Math.asin(topZ / rangeSat);\r\n  var Az = Math.atan2(-topE, topS) + pi;\r\n  return {\r\n    azimuth: Az,\r\n    elevation: El,\r\n    rangeSat: rangeSat // Range in km\r\n  };\r\n}\r\n\r\nfunction ecfToLookAngles(observerGeodetic, satelliteEcf) {\r\n  var topocentricCoords = topocentric(observerGeodetic, satelliteEcf);\r\n  return topocentricToLookAngles(topocentricCoords);\r\n}\r\n\r\nexport { constants, degreesLat, degreesLong, degreesToRadians, dopplerFactor, ecfToEci, ecfToLookAngles, eciToEcf, eciToGeodetic, geodeticToEcf, gstime, invjday, jday, propagate, radiansLat, radiansLong, radiansToDegrees, sgp4, twoline2satrec };\r\n"],
  "mappings": "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",
  "names": []
}
